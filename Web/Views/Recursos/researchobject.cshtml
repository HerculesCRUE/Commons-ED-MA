@*[security|||researchobject|||hercules]*@
@using System.Reflection;
@using System.Net.Http
@using System.Net.Http.Headers
@using System.Globalization
@{
	bool ED_HABILITADO = Html.Translate("ED_HABILITADO") == "true";
	bool MA_HABILITADO = Html.Translate("MA_HABILITADO") == "true";
    ViewBag.MA_DISPONIBLE = true;
    ViewBag.ED_DISPONIBLE = true;
    @Html.PartialView("../Shared/_ComprobacionEDMA");
}
@model ResourceViewModel
@{
    ResourceModel FichaDocumento = Model.Resource;
    CommunityModel Comunidad = Html.GetComunidad();
    UserIdentityModel IdentidadActual = Html.GetIdentidadActual();
    Guid currentId = IdentidadActual.KeyUser;
    // SemanticResourceModel semCmsModel = Model.SemanticFrom;


	Html.AddBodyClass(" fichaRecurso ");
    Html.AddBodyClass(" fichaRecurso-publicacion ");
    // Javascript Markdown to HTML converter
    string urlJSMDReader = "https://unpkg.com/showdown/dist/showdown.min.js";
    Html.GetListaJS().Add(urlJSMDReader);
    string urlPersonalizacion = Html.GetBaseUrlContent() + "/imagenes/proyectos/personalizacion/" + Comunidad.Key.ToString();
    string urlJSAnnotation = $"{urlPersonalizacion}/theme/annotations.js?v={Html.Translate("VERSION_CSS_JS")}";
    Html.GetListaJS().Add(urlJSAnnotation);
    SemanticResourceModel semCmsModel = Model.SemanticFrom;
    GnossOCBase.LanguageEnum idiomaUsuario = (GnossOCBase.LanguageEnum)Enum.Parse(typeof(GnossOCBase.LanguageEnum), Html.GetUtilIdiomas().LanguageCode.ToLower());
    ResearchObject pResearchObject = new ResearchObject(semCmsModel, idiomaUsuario);
    Dictionary<string, NumberFormatInfo > cultures = new Dictionary<string, NumberFormatInfo>();
    cultures.Add("es", new CultureInfo("es-ES", false).NumberFormat);
    cultures.Add("en", new CultureInfo("en-US", false).NumberFormat);

}

<div class="col col-12 col-breadcrumb">
    <ul>
        <li>
            <a href="@Comunidad.Url">Home</a>
        </li>
        <li>
            @{string urlArticulos = Comunidad.Url + "/buscador-researchobjects"; }
            <a href="@urlArticulos">ROs</a>
        </li>
        @{ if (!string.IsNullOrEmpty(pResearchObject.Roh_title))
            {
                <li>@pResearchObject.Roh_title</li>
            }
            else
            {
                <li>---</li>
            }
        }
    </ul>
</div>


@*TODO:*@
<div class="col col-12 col-xl-12 col-contenido">
    
    <div class="wrapCol">
        <div class="cabecera-ficha enCurso">
            <div class="ficha-upper-row">
                <div class="ficha-icon-wrap">
                    <span class="material-icons">article</span>
                </div>
                <div class="ficha-title-wrap">
                    @{ if (!string.IsNullOrEmpty(pResearchObject.Roh_title))
                        {
                            <h1 about="@pResearchObject.GNOSSID" property="@pResearchObject.GetPropertyURI(nameof(pResearchObject.Roh_title))" class="ficha-title" id="idPage" data-title="@pResearchObject.Roh_title">
                                @pResearchObject.Roh_title
                                @{
                                    /* if (pResearchObject.Roh_isPublic)
                                    {
                                        <span class="material-icons eye"></span>
                                    } else
                                    {
                                        <span class="material-icons visibility-activo"></span>
                                    } */
                                }
                                
                            </h1>
                        }
                        else
                        {
                            <p class="ficha-title">
                                ---
                                <span class="material-icons candado-activo"></span>
                            </p>
                        }
                    }
                </div>

				@{
					string urlCV = "";
					if (pResearchObject.Bibo_authorList != null)
					{
						foreach (BFO_0000023 bfo_0000023 in pResearchObject.Bibo_authorList)
						{
							if (bfo_0000023.Rdf_member != null && bfo_0000023.Rdf_member.Roh_cvOf != null && bfo_0000023.Rdf_member.Roh_gnossUser.Replace("http://gnoss/", "").ToLower() == IdentidadActual.KeyUser.ToString().ToLower())
							{
								urlCV = bfo_0000023.Rdf_member.Roh_cvOf.URL;
								urlCV += "?tab=http://w3id.org/roh/researchObject&id=" + FichaDocumento.Key.ToString().ToLower()+"&section=http://w3id.org/roh/researchObjects";
							}
						}
					}
				}


                <div class="acciones-ficha-wrap">
                    <ul class="no-list-style d-flex">
                        <li>
                            <div class="acciones-recurso-listado">
                                <div class="dropdown">
                                    <a href="#" class="dropdown-toggle btn btn-outline-grey no-flecha" role="button" id="dropdownMasOpciones" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <span class="material-icons">more_vert</span>
                                    </a>
                                    <div class="dropdown-menu basic-dropdown dropdown-icons dropdown-menu-right" aria-labelledby="dropdownMasOpciones">
                                        <p class="dropdown-title">@Html.Translate("ACCIONES")</p>
                                        <ul class="no-list-style">											
											@if (!string.IsNullOrEmpty(urlCV) && ED_HABILITADO)
											{
												<li>
													<a href="@urlCV" target="_blank" class="item-dropdown">
														<span class="material-icons">edit</span>
														<span class="texto">@Html.GetText("COMMON", "EDITAR")</span>
													</a>
												</li>
                                                <li>
                                                    <a href="javascript:startVincularRo()" class="item-dropdown">
                                                        <span class="material-icons">link</span>
                                                        <span class="texto">@Html.Translate("VINCULAR_RO")</span>
                                                    </a>
                                                </li>
											}
                                            <li>
                                                <a href="javascript:void(0)" data-toggle="modal" data-target="#modal-nueva-anotacion" class="item-dropdown">
                                                    <span class="material-icons">edit_note</span>
                                                    <span class="texto">@Html.Translate("NUEVA_ANOTACION")</span>
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
            <h3>
                @{ if (pResearchObject.Dct_issued != null && pResearchObject.Dct_issued.HasValue)
                    {
                        string fecha = pResearchObject.Dct_issued.ToString().Split('/')[2].Split(' ')[0];
                        <span about="@pResearchObject.GNOSSID" property="@pResearchObject.GetPropertyURI(nameof(pResearchObject.Dct_issued))">@fecha</span>
                    }
                    else
                    {
                        <span>---</span>
                    }
                }
                @if (@pResearchObject.Dc_type != null)
                {

                    <span class="title" about="@pResearchObject.GNOSSID" property="@pResearchObject.GetPropertyURI(nameof(pResearchObject.Dc_type))"> 
                        - @pResearchObject.Dc_type[0].Dc_title[idiomaUsuario]
                    </span>
                }
                
            </h3>
            <div class="list-wrap authors">
                <ul class="d-flex flex-wrap no-list-style">
                    @{
                        Dictionary<string, List<List<string>>> dicAutoresOrg = new Dictionary<string, List<List<string>>>();
                        
                        List<Tuple<string, string, string, string, string>> listaTuplas = new List<Tuple<string, string, string, string, string>>();
                        Dictionary<string, int> dicOrganizaciones = new Dictionary<string, int>();
                        string orgExterna = "OrganizaciÃ³n Externa";

                        if (pResearchObject.Bibo_authorList != null && pResearchObject.Bibo_authorList.Count > 0)
                        {
                            foreach (BFO_0000023 autor in pResearchObject.Bibo_authorList)
                            {
                                if (autor.Rdf_member != null)
                                {
                                    Person p = autor.Rdf_member;
                                    string url = p.URL;
                                    string org = "";

                                    if (p.Roh_hasRole != null)
                                    {
                                        org = p.Roh_hasRole.Roh_title;
                                    }

                                    listaTuplas.Add(new Tuple<string, string, string, string, string>(p.GNOSSID, org, p.Foaf_name, autor.Foaf_nick, p.URL));

                                }


                            }
                        }

                        // Tupla<Id, Organizacion, Nombre, Firma>
                        int contadorN = 1;
                        foreach (Tuple<string, string, string, string, string> tupla in listaTuplas)
                        {
                            if (!string.IsNullOrEmpty(tupla.Item2) && !dicOrganizaciones.ContainsKey(tupla.Item2))
                            {
                                dicOrganizaciones.Add(tupla.Item2, contadorN);
                                contadorN++;
                            }
                            else if (!dicOrganizaciones.ContainsKey(orgExterna) && string.IsNullOrEmpty(tupla.Item2))
                            {
                                dicOrganizaciones.Add(orgExterna, contadorN);
                                contadorN++;
                            }
                        }

                        //Tupla<Id, Organizacion, Nombre, Firma>
                        foreach (Tuple<string, string, string, string, string> tupla in listaTuplas)
                        {
                            string filtroPersona = string.Empty;
                            string nombreFirma = string.Empty;
                            string userUrl = "javascript: void(0);";
                            if (!string.IsNullOrEmpty(tupla.Item4))
                            {
                                nombreFirma = tupla.Item4;
                                filtroPersona = $@"bibo:authorList@@@foaf:nick={tupla.Item4}";
                            }
                            else if (!string.IsNullOrEmpty(tupla.Item3))
                            {
                                nombreFirma = tupla.Item3;
                                filtroPersona = $@"bibo:authorList@@@rdf:member@@@foaf:name={tupla.Item3}";
                            }

                            int numOrganizacion = 1;
                            if (dicOrganizaciones.ContainsKey(tupla.Item2))
                            {
                                numOrganizacion = dicOrganizaciones[tupla.Item2];
                            }
                            else if (dicOrganizaciones.ContainsKey(orgExterna) && string.IsNullOrEmpty(tupla.Item2))
                            {
                                numOrganizacion = dicOrganizaciones[orgExterna];
                            }

                            if (tupla.Item5 != null)
                            {
                                userUrl = tupla.Item5;
                            }

                            <li>
								@if(MA_HABILITADO)
								{
									<a href="@userUrl" name="@filtroPersona">@nombreFirma</a>
								}else
								{
									@nombreFirma
								}
                                <sup>@numOrganizacion</sup>
                            </li>

                        }
                    }
                </ul>
            </div>
            <div class="list-wrap colleges">
                <ul>
                    @{
                        foreach (KeyValuePair<string, int> item in dicOrganizaciones)
                        {
                            <li>
                                <sup>@item.Value</sup>
                                <a href="javascript: void(0);">@item.Key</a>
                            </li>
                        }
                    }
                </ul>
            </div>
            <div class="description-wrap">
                <div class="desc" style="display: -webkit-box;">
                    <p about="@pResearchObject.GNOSSID" property="@pResearchObject.GetPropertyURI(nameof(pResearchObject.Bibo_abstract))">@Html.Raw(pResearchObject.Bibo_abstract)</p>
                </div>
                <p class="moreResults showMore">
                    <a href="javascript: void(0);" class="ver-mas" style="display: flex;">@Html.Translate("VER_MAS")</a>
                    <a href="javascript: void(0);" class="ver-menos" style="display: none;">@Html.Translate("VER_MENOS")</a>
                </p>
            </div>
            <div class="list-wrap tags">
                <div class="label">@Html.Translate("AREAS_TEMATICAS")</div>
                <ul>
                    @{ int contadorAreaConocimiento = 0;
                        if (pResearchObject.Roh_hasKnowledgeArea != null && pResearchObject.Roh_hasKnowledgeArea.Count > 0)
                        {
                            foreach (CategoryPath area in pResearchObject.Roh_hasKnowledgeArea)
                            {
                                if (area != null && area.Roh_categoryNode != null && area.Roh_categoryNode.Count > 0)
                                {
                                    Concept concept = area.Roh_categoryNode.LastOrDefault(); // TODO: Implementar lÃ³gica por si vienen desordenadas las categorÃ­as.

                                    //foreach (Concept concept in area.Roh_categoryNode)
                                    //{
                                    if (concept != null && !string.IsNullOrEmpty(concept.Skos_prefLabel) && contadorAreaConocimiento < 3)
                                    {
                                        contadorAreaConocimiento++;
                                        <li>
                                            <a href="@Comunidad.Url/@Html.Translate("BUSQUEDA_URL_RESEARCH_OBJECTS")?roh:hasKnowledgeArea@("@@@")roh:categoryNode=@concept.GNOSSID">
                                                <span about="@concept.GNOSSID" property="@concept.GetPropertyURI(nameof(concept.Skos_prefLabel))" class="texto">@concept.Skos_prefLabel</span>
                                            </a>
                                        </li>
                                    }
                                    else if (concept != null && !string.IsNullOrEmpty(concept.Skos_prefLabel))
                                    {
                                        contadorAreaConocimiento++;
                                        <li class="ocultar" style="display: none;">
                                            <a href="@Comunidad.Url/@Html.Translate("BUSQUEDA_URL_RESEARCH_OBJECTS")?roh:hasKnowledgeArea@("@@@")roh:categoryNode=@concept.GNOSSID">
                                                <span about="@concept.GNOSSID" property="@concept.GetPropertyURI(nameof(concept.Skos_prefLabel))" class="texto">@concept.Skos_prefLabel</span>
                                            </a>
                                        </li>
                                    }
                                    //}
                                }
                            }
                        }
                    }
                </ul>
                @{ if (contadorAreaConocimiento > 3)
                    {
                        <p class="moreResults">
                            <a href="javascript: void(0);" class="ver-mas" style="display: flex;">@Html.Translate("VER_MAS")</a>
                            <a href="javascript: void(0);" class="ver-menos" style="display: none;">@Html.Translate("VER_MENOS")</a>
                        </p>
                    }
                }
            </div>
            <div class="list-wrap tags">
                <div class="label">@Html.Translate("ETIQUETAS")</div>
                <ul>
                    @{ int contadorCategorias = 0;
                        if (pResearchObject.Vivo_freeTextKeyword != null && pResearchObject.Vivo_freeTextKeyword.Count > 0)
                        {
                            foreach (string etiquetas in pResearchObject.Vivo_freeTextKeyword)
                            {
                                if (!string.IsNullOrEmpty(etiquetas) && contadorCategorias < 3)
                                {
                                    contadorCategorias++;
                                    <li>
                                        <a href="http://edma.gnoss.com/comunidad[%%%_SHORT_NAME_PROJECT_%%%]/researchobjects?vivo:freeTextKeyword=@etiquetas">
                                            <span about="@pResearchObject.GNOSSID" property="@pResearchObject.GetPropertyURI(nameof(pResearchObject.Vivo_freeTextKeyword))" class="texto">@etiquetas</span>
                                        </a>
                                    </li>
                                }
                                else if (!string.IsNullOrEmpty(etiquetas))
                                {
                                    contadorCategorias++;
                                    <li class="ocultar" style="display: none;">
                                        <a href="http://edma.gnoss.com/comunidad[%%%_SHORT_NAME_PROJECT_%%%]/researchobjects?vivo:freeTextKeyword=@etiquetas">
                                            <span about="@pResearchObject.GNOSSID" property="@pResearchObject.GetPropertyURI(nameof(pResearchObject.Vivo_freeTextKeyword))" class="texto">@etiquetas</span>
                                        </a>
                                    </li>
                                }
                            }
                        }
                        else
                        {
                            <li>
                                <a>
                                    <span class="texto">---</span>
                                </a>
                            </li>
                        }
                    }
                </ul>
                @{ if (contadorCategorias > 3)
                    {
                        <p class="moreResults">
                            <a href="javascript: void(0);" class="ver-mas" style="display: flex;">@Html.Translate("VER_MAS")</a>
                            <a href="javascript: void(0);" class="ver-menos" style="display: none;">@Html.Translate("VER_MENOS")</a>
                        </p>
                    }
                }
            </div>
            
            @if (pResearchObject.Bibo_doi != null && pResearchObject.Bibo_doi != "")
            {
                <div class="group-wrap">
                    <div class="bloque">
                        <div class="label">@Html.Translate("DOI")</div>
                        <div class="value">
                            @{ 
                                //foreach (var el in @pResearchObject.Bibo_identifier)
                                //{
                                //    if (el.Foaf_primaryTopic != null && el.Foaf_primaryTopic.Dc_title != null && el.Foaf_primaryTopic.Dc_title[0] != null && el.Foaf_primaryTopic.Dc_title[0] == "DOI")
                                //    {
                                //        <a href="https://doi.org/@el.Dc_title" target="_blank">@el.Dc_title</a>
                                //    }
                                //}
                            }
                            <a href="https://doi.org/@pResearchObject.Bibo_doi" target="_blank" about="@pResearchObject.GNOSSID" property="@pResearchObject.GetPropertyURI(nameof(pResearchObject.Bibo_doi))">@pResearchObject.Bibo_doi</a>
                        </div>
                    </div>
                </div>
            }

            @if (pResearchObject.Vcard_url != null && pResearchObject.Vcard_url != "")
            {
                <div class="group-wrap">
                    <div class="bloque">
                        <div class="label">@Html.Translate("URL")</div>
                        <div class="value">
                            <a href="@pResearchObject.Vcard_url" target="_blank" about="@pResearchObject.GNOSSID" property="@pResearchObject.GetPropertyURI(nameof(pResearchObject.Vcard_url))">@pResearchObject.Vcard_url</a>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="contenido-ficha contenido-publicacion">
            <div class="tab-paneles-ficha">
                <div class="tabs">
                    <ul class="nav nav-tabs" id="navegacion-recurso" role="tablist">
                        <li class="nav-item" role="presentation">
                            <!-- InformaciÃ³n -->
                            <a class="nav-link active" id="informacion-tab" data-toggle="tab" href="#informacion-panel" role="tab" aria-controls="informacion-panel" aria-selected="true">
                                <div class="bloque">
                                    <div class="label">@Html.Translate("INFORMACION")</div>
                                </div>
                            </a>
                        </li>
                        
                        <li class="nav-item" role="presentation">
                            <!-- Relacionados -->
                            <a class="nav-link" id="relacionados-tab" data-toggle="tab" href="#relacionados-panel" role="tab" aria-controls="relacionados-panel">
                                <div class="bloque">
                                    <div class="label">@Html.Translate("ROS_RELACIONADOS")</div>
                                    <!-- <div class="data" about="@pResearchObject.GNOSSID" property="@pResearchObject.GetPropertyURI(nameof(pResearchObject.Roh_citationLoadedCount))">
                                        @pResearchObject.Roh_citationLoadedCount
                                    </div> -->
                                </div>
                            </a>
                        </li>
                        
                        
                        @{/*
                            <!-- Citado por -->
                            <li class="nav-item" role="presentation">
                                <a class="nav-link" id="citas-tab" data-toggle="tab" href="#citas-panel" role="tab" aria-controls="citas-panel" >
                                    <div class="bloque">
                                        <div class="label">@Html.Translate("CITADO_POR")</div>
                                        <!-- <div class="data" about="@pResearchObject.GNOSSID" property="@pResearchObject.GetPropertyURI(nameof(pResearchObject.Roh_citationLoadedCount))">@pResearchObject.Roh_citationLoadedCount</div> -->
                                    </div>
                                </a>
                            </li>
                            */
                        } 

                        <li class="nav-item" role="presentation">
                            <!-- Referencias -->
                            <a class="nav-link" id="referencias-tab" data-toggle="tab" href="#referencias-panel" role="tab" aria-controls="referencias-panel">
                                <div class="bloque">
                                    <div class="label">@Html.Translate("REFERENCIAS")</div>
                                    <!-- <div class="data"></div> -->
                                </div>
                            </a>
                        </li>
                        @{
                        
                        <li class="nav-item" role="presentation">
                            <!-- anotaciones -->
                            <a class="nav-link" id="annotations-tab" data-toggle="tab" href="#annotations-panel" role="tab" aria-controls="annotations-panel" >
                                <div class="bloque">
                                    <div class="label">@Html.Translate("ANOTACIONES")</div>
                                    <div class="data" about="@pResearchObject.GNOSSID" property="@pResearchObject.GetPropertyURI(nameof(pResearchObject.Roh_citationLoadedCount))">@pResearchObject.Roh_citationLoadedCount</div>
                                </div>
                            </a>
                         </li>                         
                        }                        
						<li class="nav-item" role="presentation" id="linked-panel-li">
							<!-- Referencias -->
							<a class="nav-link" id="linked-tab" data-toggle="tab" href="#linked-panel" role="tab" aria-controls="linked-panel">
								<div class="bloque">
									<div class="label">@Html.Translate("ROS_VINCULADOS")</div>
									<div class="data">@pResearchObject.Roh_linkedCount</div>
								</div>
							</a>
						</li>
                    </ul>
                </div>
                <div class="tab-content" id="paneles-recurso">
                
                    <div class="tab-pane fade show active" id="informacion-panel" role="tabpanel" aria-labelledby="informacion-tab">
                        <div class="row" id="contenedorBuscadorInformacion">
                            <div class="col col-12">
                                <div class="wrapCol">
                                    <div class="group-wrap div4">
                                        @{
                                            var cultureFormat = cultures[idiomaUsuario.ToString()];
                                            cultureFormat.NumberDecimalDigits = 0;

                                            // LANGUAGE
                                            if (pResearchObject.Vcard_hasLanguage != null && pResearchObject.Vcard_hasLanguage.Count > 0)
                                            {

                                                string textInline = "";
                                                string textData = "";
                                                @foreach (Language languageItem in pResearchObject.Vcard_hasLanguage)
                                                {
                                                    textInline += languageItem.Roh_title + " <span>(" + languageItem.Roh_percentage + "%)</span> ";
                                                    textData += "data-" + languageItem.Roh_title + "=\""+ languageItem.Roh_percentage +"%\" ";
                                                }

                                                <div class="bloque code-tooltip" @Html.Raw(textData)>
                                                    <div class="label">@Html.Translate("LENGUAJES_PROGRAMACION")</div>
                                                    <div class="value" about="@pResearchObject.GNOSSID" property="@pResearchObject.GetPropertyURI(nameof(pResearchObject.Vcard_hasLanguage))" >
                                                        @Html.Raw(textInline)
                                                    </div>
                                                </div>
                                            }

                                            // lICENCE
                                            if (pResearchObject.Dct_license != null && pResearchObject.Dct_license != "")
                                            {
                                                <div class="bloque">
                                                    <div class="label">@Html.Translate("LICENCIA")</div>
                                                    <div class="value" about="@pResearchObject.GNOSSID" property="@pResearchObject.GetPropertyURI(nameof(pResearchObject.Dct_license))" >@pResearchObject.Dct_license</div>
                                                </div>
                                            }

                                            // LAST UPDATE DATE
                                            if (pResearchObject.Roh_updatedDate != null)
                                            {
                                                string anio = pResearchObject.Roh_updatedDate.Value.Year.ToString();
                                                string mesInicio = pResearchObject.Roh_updatedDate.Value.Month.ToString();
                                                string diaInicio = pResearchObject.Roh_updatedDate.Value.Day.ToString();
                                                string updatedDate = diaInicio + " / " + mesInicio + " / " + anio;
                                                <div class="bloque">
                                                    <div class="label">@Html.Translate("FECHA_ULTIMA_ACTUALIZACION")</div>
                                                    <div class="value" about="@pResearchObject.GNOSSID" property="@pResearchObject.GetPropertyURI(nameof(pResearchObject.Roh_updatedDate))" >@updatedDate</div>
                                                </div>
                                            }
                                            
                                            // RELEASES NUMBER
                                            if (pResearchObject.Roh_releasesNumber != null && pResearchObject.Roh_releasesNumber != 0)
                                            {
                                                <div class="bloque">
                                                    <div class="label">@Html.Translate("NUMERO_RELEASES")</div>
                                                    <div class="value" about="@pResearchObject.GNOSSID" property="@pResearchObject.GetPropertyURI(nameof(pResearchObject.Roh_releasesNumber))" >
                                                        @(Int32.Parse(pResearchObject.Roh_releasesNumber.ToString()).ToString("N", cultureFormat))
                                                    </div>
                                                </div>
                                            }
                                            
                                            // BRANCHES NUMBER
                                            if (pResearchObject.Roh_branchesNumber != null && pResearchObject.Roh_branchesNumber != 0)
                                            {
                                                <div class="bloque">
                                                    <div class="label">@Html.Translate("NUMERO_BRANCHES")</div>
                                                    <div class="value" about="@pResearchObject.GNOSSID" property="@pResearchObject.GetPropertyURI(nameof(pResearchObject.Roh_branchesNumber))" >
                                                        @(Int32.Parse(pResearchObject.Roh_branchesNumber.ToString()).ToString("N", cultureFormat))
                                                    </div>
                                                </div>
                                            }
                                            
                                            // PACKAGE NUMBER
                                            if (pResearchObject.Roh_packagesNumber != null && pResearchObject.Roh_packagesNumber != 0)
                                            {
                                                <div class="bloque">
                                                    <div class="label">@Html.Translate("NUMERO_PACKAGES")</div>
                                                    <div class="value" about="@pResearchObject.GNOSSID" property="@pResearchObject.GetPropertyURI(nameof(pResearchObject.Roh_packagesNumber))" >
                                                        @(Int32.Parse(pResearchObject.Roh_packagesNumber.ToString()).ToString("N", cultureFormat))
                                                    </div>
                                                </div>
                                            }
                                            
                                            // FORK NUMBER
                                            if (pResearchObject.Roh_forksNumber != null && pResearchObject.Roh_forksNumber != 0)
                                            {
                                                <div class="bloque">
                                                    <div class="label">@Html.Translate("NUMERO_FORK")</div>
                                                    <div class="value" about="@pResearchObject.GNOSSID" property="@pResearchObject.GetPropertyURI(nameof(pResearchObject.Roh_forksNumber))" >
                                                        @(Int32.Parse(pResearchObject.Roh_forksNumber.ToString()).ToString("N", cultureFormat))
                                                    </div>
                                                </div>
                                            }
                                            
                                            // ISSUES NUMBER
                                            if (pResearchObject.Roh_issuesNumber != null && pResearchObject.Roh_issuesNumber != 0)
                                            {
                                                <div class="bloque">
                                                    <div class="label">@Html.Translate("NUMERO_ISSUES")</div>
                                                    <div class="value" about="@pResearchObject.GNOSSID" property="@pResearchObject.GetPropertyURI(nameof(pResearchObject.Roh_issuesNumber))" >
                                                        @(Int32.Parse(pResearchObject.Roh_issuesNumber.ToString()).ToString("N", cultureFormat))
                                                    </div>
                                                </div>
                                            }

                                        }
                                    </div>
                                </div>
                            </div>
                            @{
                                string urlFrameVc = pResearchObject.Vcard_url;
                                var type = pResearchObject.Roh_researchObjectType;
                                string urlFrame;

                                urlFrame = getUrlFrame(urlFrameVc);

                                if (urlFrame != "")
                                {
                                    <div class="col col-12">
                                        <iframe src="@urlFrame" width="926" height="451" allowfullscreen frameborder="0"></iframe>
                                    </div>
                                }
                             }
                            
                        </div>
                    </div>
                    <div class="tab-pane fade" id="relacionados-panel" role="tabpanel" aria-labelledby="relacionados-tab">
                        <div class="row" id="contenedorBuscadorRelacionados">
                            <div class="col col-12 col-section-title font-weight-bold searcherTitle">
                                <div class="wrapCol">
                                    <p>@Html.Translate("ROS_RELACIONADOS")</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    @{
                        /*
                            <div class="tab-pane fade" id="citas-panel" role="tabpanel" aria-labelledby="citas-tab">
                                <div class="row" id="contenedorBuscadorCitas">
                                    <!-- <div class="col col-12 col-grafo mb-5">
                                        <div class="wrapCol" id="graficaBuscadorCitas" style="width: 1224px; height: 500px;"></div>
                                    </div> -->
                                    <div class="col col-12 col-section-title font-weight-bold searcherTitle">
                                        <div class="wrapCol">
                                            <p>@Html.Translate("CITADO_POR")</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                         */
                    }
                    
                    <div class="tab-pane fade" id="referencias-panel" role="tabpanel" aria-labelledby="referencias-tab">
                        <div class="row" id="contenedorBuscadorReferencias">
                            <!-- <div class="col col-12 col-grafo mb-5">
                                <div class="wrapCol" id="graficaBuscadorReferencias" style="width: 1224px; height: 500px;"></div>
                            </div> -->
                            <div class="col col-12 col-section-title font-weight-bold searcherTitle">
                                <div class="wrapCol">
                                    <p>@Html.Translate("REFERENCIAS")</p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="annotations-panel" role="tabpanel" aria-labelledby="annotations-tab">
                        <div class="row">
                            <div class="col col-12 header-listado">
                                <div class="h1-container">
                                    <h2>@Html.Translate("MIS_NOTAS_PRIVADAS")
                                        <span class="numResultados">0</span>
                                    </h2>
                                </div>
                            </div>
                            <div class="col col-12 col-contenido">
                                <div class="wrapCol">
                                    <div class="resource-list listView resource-list-buscador">
                                        <div class="resource-list-wrap">
                                            <p>
                                                @Html.Translate("NO_HAY_NOTAS_PRIVADAS")
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="linked-panel" role="tabpanel" aria-labelledby="linked-tab">
                        <!-- <div class="row">
                            <div class="col col-12 header-listado">
                                <div class="h1-container">
                                    <h2>@Html.Translate("ROS_VINCULADOS")
                                        <span class="numResultados">0</span>
                                    </h2>
                                </div>
                            </div>
                        </div> -->
                        <div class="row" id="contenedorBuscadorResearchObjectsLinked">
                        </div>
                    </div>
                    
                </div>
            </div>
        </div>
    </div>
</div>
@if (!IdentidadActual.IsGuestUser) 
{
    


    <div id="modal-eliminar-anotacion-confirmacion" class="modal modal-top fade modal-edicion" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <p class="modal-title"><span class="material-icons">delete</span>@Html.Translate("BORRAR_ANOTACIONES")</p>
                    <span class="material-icons cerrar" data-dismiss="modal" aria-label="Close">close</span>
                </div>
                <div class="modal-body">
                    <div class="formulario-edicion">
                        <div class="custom-form-row">
                            <div class="form-group full-group">
                                <label class="control-label d-block">@Html.Translate("CONFIRMACION_BORRAR_ANOTACIONES")</label>
                                <div class="form-actions">
                                    <a href="javascript: borrarOferta()" class="btn btn-primary uppercase">@Html.Translate("BORRAR")</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <div id="modal-nueva-anotacion" class="modal modal-top fade modal-edicion" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <p class="modal-title"><span class="material-icons">send</span>@Html.Translate("ANOTACION")</p>
                    <span class="material-icons cerrar" data-dismiss="modal" aria-label="Close">close</span>
                </div>
                <div class="modal-body">
                    <div class="formulario-edicion">
                        <div class="custom-form-row">
                            <div class="form-group full-group">
                                <label class="control-label d-block">@Html.Translate("INTRODUCE_UNA_ANOTACION")</label>
                                <textarea class="w-100" id="areaTextoComentario"> </textarea>
                                <div class="form-actions">
                                    <a href="javascript: nuevaAnotacion('areaTextoComentario')" class="btn btn-primary uppercase">@Html.Translate("ENVIAR")</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="modal-editar-anotacion" class="modal modal-top fade modal-edicion" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <p class="modal-title"><span class="material-icons">send</span>@Html.Translate("ANOTACION")</p>
                    <span class="material-icons cerrar" data-dismiss="modal" aria-label="Close">close</span>
                </div>
                <div class="modal-body">
                    <div class="formulario-edicion">
                        <div class="custom-form-row">
                            <div class="form-group full-group">
                                <label class="control-label d-block">@Html.Translate("INTRODUCE_UNA_ANOTACION")</label>
                                <textarea class="w-100 textareaInput" id="areaTextoComentarioEditar"> </textarea>
                                <div class="form-actions">
                                    <a href="javascript:void(0)" id="btn-modal-editar-anotacion" data-dismiss="modal" class="btn btn-primary uppercase">@Html.Translate("ENVIAR")</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    
    <div id="modal-vinvular-ro-old" class="modal modal-top modal-wide fade" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <p class="modal-title"><span class="material-icons">link</span>@Html.Translate("VINCULAR_RO")</p>
                    <span class="material-icons cerrar" data-dismiss="modal" aria-label="Close">close</span>
                </div>
                <div class="modal-body">
                    <div>
                        <div class="row contenedorBuscadorResearchObjectsModal" id="contenedorBuscadorResearchObjectsModal">
                            <div class="col col-12 col-section-title font-weight-bold">
                                <div class="wrapCol">
                                    <p></p>
                                </div>
                            </div>
                            <div class="col col-12 col-section-title font-weight-bold searcherTitle">
                                <div class="wrapCol">
                                    <p>@Html.Translate("LISTADO_RESEARCHOBJECTS")</p>
                                </div>
                            </div>
                        </div>
                        <div class="footer pb-2 w-100 mt-5 text-center">

                            <a href="javascript:cargarMasRO()" class="btn btn-primary uppercase">@Html.Translate("CARGAR_MAS")</a>
                        </div>
                        <div class="pb-2 w-100"> </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="modal-vinvular-ro" data-backdrop="static"  class="modal modal-top fade modal-vinvular-ro" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content modal-content-height">
                <div class="modal-header">
                    <p class="modal-title"><span class="material-icons">label</span>@Html.Translate("VILCULAR_ROS")</p>
                    <span class="material-icons cerrar" data-dismiss="modal" aria-label="Close">close</span>
                </div>
                <div class="modal-body">
                    <div class="formulario-edicion">
                        <div class="custom-form-row mb-0">
                            <div class="form-group full-group">
                                <label class="control-label d-block">@Html.Translate("VILCULAR_ROS")</label>
                                <small class="pb-2 d-inline-block">@Html.Translate("TEXTO_EXPLICATIVO_VINCULAR_ROS")</small>
                                <input placeholder="@Html.Translate("TECLEA_E_INTRODUCE_AUTOCOMPLETADO")" type="text" name="" id="tagsSearchModalCluster" class="form-control not-outline">
                                <div class="ac_results" style="position: absolute;width: 100%;display: none;">
                                    <ul>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="list-wrap tags">
                            <ul>
                            </ul>
                        </div>
                        <!-- <div class="form-actions">
                            <a href="javascript: void(0);" class="btn btn-primary uppercase btnclosemodal" data-dismiss="modal">@Html.Translate("GUARDAR")</a>
                        </div> -->
                    </div>
                    <div class="row px-3">
                        <div class="col col-12 col-contenido">
                            <div class="wrapCol">
                                <div class="title_list">
                                    <h2>@Html.Translate("ROS_VINCULADOS")</h2>
                                </div>
                                <div class="resource-list listView resource-list-buscador">
                                    <div class="resource-list-wrap">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

}
<!-- JAVASCRIPT -->
<script type="text/javascript">
    var depuracion = false;
    var annIdRO = "@pResearchObject.mGNOSSID";
    var annIdUser = "@currentId";
    var annRdfType = "@pResearchObject.RdfType";
    var annOntology = "researchobject";
    var anotaciones = new CargarAnotaciones(annIdRO, annIdUser, annRdfType, annOntology);

    const localUrlBase = "https://localhost:44321/";
    const servicioExtermpBaseUrl = "@Html.GetBaseUrlContent()/";
    const urlBase = "@Html.GetBaseUrl()";
    if (urlBase.includes("localhost") || urlBase.includes("depuracion")) {
        depuracion = true;
    }

    const currentId = "@currentId"
    const docId = "@pResearchObject.GNOSSID"


    ///////////////////////////////////
    //// Funciones para vincular ROs
    ///////////////////////////////////

    const urlSearchLinked = new URL(url_servicio_externo + "RosVinculados/SearchROs")
    const urlLoadLinked = new URL(url_servicio_externo + "RosVinculados/LoadRosLinked")
    const urlDel = new URL(url_servicio_externo+"RosVinculados/DeleteLinked")
    const urlAddRo = new URL(url_servicio_externo+"RosVinculados/AddLink")



    /**
    * Clase que contiene la funcionalidad del modal de los TAGS para el Cluster
    */
    class ModalSearchTagsVinculados {
        constructor() {
            this.body = $('body')
            this.modal = this.body.find('#modal-vinvular-ro')
            this.inputSearch = this.modal.find('#tagsSearchModalCluster')
            this.results = this.modal.find('.ac_results')
            this.resultsUl = this.results.find('ul')
            this.addedROs = []
            this.excludedItems = []
            this.loadedResources = []
            this.timeWaitingForUserToType = 750; // Esperar 0.75 segundos a si el usuario ha dejado de escribir para iniciar bÃºsqueda
            this.tagsWrappper = this.modal.find('.resource-list-wrap')
            // this.ignoreKeysToBuscador = [37, 38, 39, 40, 46, 8, 32, 91, 17, 18, 20, 36, 18, 27]
            this.ignoreKeysToBuscador = [37, 38, 39, 40, 8, 32, 91, 17, 18, 20, 36, 18, 27]

            // Inicializa la funcionalidad del buscador de TAGS
            this.inputSearchEnter()


            this.excludedItems.push(docId)

            /* if (window.location.hostname == 'depuracion.net' || window.location.hostname.includes("localhost")) {
                var urlSTAGS = new URL(url_servicio_externo + 'servicioexterno/' + uriSearchTags)
            } */
        }

        /**
         * Inicia la funcionalidad del modal
         */
        init() {

            let _self = this

            this.modal.modal('show')
            this.cargarROsVinculados()

            // Se ejecuta cuando el modal se cierra
            $("#modal-vinvular-ro").on("hidden.bs.modal", function () {
                _self.cerrarVincularRO()
            })
        }

        /**
         * MÃ©todo para terminar de vincular los ROs
         */
        cerrarVincularRO() {
            $("#modal-vinvular-ro").modal("hide")
            MontarResultadosScroll.destroyScroll()
            $(document.querySelector("#navegacion-recurso .active")).click()
            // $(document.querySelector('#navegacion-recurso .active')).tab('show')
        }


        /**
         * MÃ©todo que carga los ROs vinculados
         */
        cargarROsVinculados() {

            let _self = this

            let arg = {};
            arg.pIdROId = docId;
            arg.lang = "@idiomaUsuario";

            MostrarUpdateProgress();
            $.get(urlLoadLinked.toString(), arg, function (data) {
                if (data.length > 0) 
                {
                    _self.printAllLinkedROs(data)
                    _self.addedROs = data.map(e => e.entityID)
                    _self.loadedResources = data
                    _self.excludedItems = data.map(e => e.entityID)
                }
                OcultarUpdateProgress()
            });
        }

        /**
         * MÃ©todo que carga los ROs vinculados
         */
        printAllLinkedROs(data) {

            let _self = this

            // var currentSec = "none!!!";

            data = data.sort((a, b) => {
                if (a.roType < b.roType) {
                    return -1
                }
                if (a.roType > b.roType) {
                    return 1
                }
                return 0
            })


            let ros = data.map(ro => {
                var $ro = $(_self.generateHtmlItem(ro))
                _self.deleteEvent($ro, ro)
                return $ro
            })

            // Pinta el resultado
            // $("#linked-panel .col-contenido .resource-list-wrap").html(ros)
            this.tagsWrappper.html(ros)

            comportamientoVerMasVerMenos.init()

        }

        /**
         * MÃ©todo que obtiene el html a pintar de un RO
         */
        generateHtmlItem(ro) {
            let htmlRes = ""
            // if (currentSec != ro.roType) 
            // {
            //     currentSec = ro.roType
            // }

            if (ro.roType == "") 
            {
                ro.roTypeTitle = "@Html.Translate("PUBLICACION")"
            }

            let htmlMenu = ""

            // Creamos el mÃ©todo de borrado dependiendo de si el vÃ­nculo es desde el RO o estÃ¡ relacionado desde otro RO
            // let link = ""
            // if (ro.origin) 
            // {
            //     link = "javascript:modalSearchTagsVinculados.deleteLink('"+ ro.entityID +"', docId)"
            // } else {
            //     link = "javascript:modalSearchTagsVinculados.deleteLink(docId, '"+ ro.entityID +"')"
            // }
            

            // Generamos la url
            let nameUrlRo = cleanStringUrlLikeGnoss(ro.title)
            let urlResource = "@Comunidad.Url/@Html.GetText("URLSEM", "RECURSO")/" + nameUrlRo + "/" + ro.entityID.split("_")[1]


            // Pinto "mostrar mÃ¡s" si la descripciÃ³n contiene un texto largo
            let showMore = ""
            if (ro.description.trim() != "" && ro.description.length > 60) {
                showMore = `<p class="moreResults showMore">
                                <a href="javascript: void(0);" class="ver-mas" style="display: flex;">@Html.Translate("VER_MAS")</a>
                                <a href="javascript: void(0);" class="ver-menos" style="display: none;">@Html.Translate("VER_MENOS")</a>
                            </p>`
            }

            let classIcon = "visibility_off"
            if (ro.isValidated) {
                classIcon = "visibility"
            }

            // Genero el HTML final
            htmlRes += `<article class="resource rolinked">
                <div class="wrap">
                    <div class="row pb-0">

                        <div class="col">
                            <div class="middle-wrap">
                                <div class="title-wrap">
                                    <h4 class="resource-title ${classIcon}">
                                        <a href="${urlResource}" target="_blank" about="${ro.entityID}" property="http://w3id.org/roh/title">${ro.title}</a>
                                    </h4>
                                </div>
                                <div class="content-wrap">
                                    <div class="description-wrap counted">
                                        <!-- <div><b about="${ro.entityID}" property="http://purl.org/dc/terms/issued">${ro.fecha}</b></div> -->
                                        <h3>
                                            <span about="${ro.entityID}" property="http://purl.org/dc/terms/issued">${ro.fecha}</span> 
                                            <!-- ${ro.roTypeTitle} -->
                                        </h3>
                                        <!-- <div class="description-wrap">
                                            <div class="desc" style="display: -webkit-box;">
                                                <p about="${ro.entityID}" property="http://purl.org/ontology/bibo/abstract">${ro.description}</p>
                                            </div>
                                            ${showMore}
                                        </div> -->
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="acciones-wrap">
                            <ul class="no-list-style">
                                <li>
                                    <a href="#" class="texto-gris-claro link-delete">
                                        <span style="width:1px; height:1px; opacity: .01; display:inline-block">Eliminar</span>
                                        <span class="material-icons-outlined">delete</span>
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </article>`

            return htmlRes
        }


        /**
         * Funcionalidad para cuando se introduce un valor en el buscador
         */
        inputSearchEnter() {
            let _self = this
            this.inputSearch.off('keyup').on('keyup', function(e) {
                let inputVal = this.value

                if (inputVal.length <= 1) 
                {
                    _self.hiddenResults()
                }
                else {
                    // Valida si el valor introducirdo en el input es 'vÃ¡lido'
                    if (_self.validarKeyPulsada(e) == true) {
                        // Limpia el 'time' para reinicializar la espera para iniciar la bÃºsqueda de TAGS
                        clearTimeout(_self.timer)
                        // Espera 0.5s para realizar la bÃºsqueda de TAGS
                        _self.timer = setTimeout(function () {
                            _self.hiddenResults()

                            _self.searchCall(inputVal).then((data) => {
                                // Muestra el selector 
                                _self.results.show()
                                if (data.length > 0) {
                                    // Pinta los resultados
                                    let resultHTML = data.map(e => {
                                        return '<li class="ac_even" data-id="'+ e.entityID +'">' + e.title + '</li>'
                                    })
                                    _self.resultsUl.html(resultHTML.join(''))
                                    _self.addTagClick()

                                } else {
                                    _self.mostrarPanelSinResultados()
                                }
                                
                            })

                        }, _self.timeWaitingForUserToType);
                    }               
                }
            })
        }

        /**
         * Oculta y borra los resultados del API
         */
        hiddenResults() {
            this.resultsUl.html('')
            this.results.hide()
        }

        /**
         * Muestra un texto "sin resultados" cuando no hay resultados del API
         */
        mostrarPanelSinResultados() {
            this.resultsUl.html('<li>Sin resultados</li>')
        }

        /**
         * MÃ©todo que genera un inicia el evento de aÃ±adir el tag (al hacer 'click') cuando se 
         * ha seleccionado un elemento de la lista de opciones disponibles 
         */
        addTagClick() {
            let _self = this
            // Evento para el click
            this.resultsUl.off('click').on('click', 'li', function(e) {
                let texto = $(this).text()
                let idItem = $(this).data('id')


                if (texto != "Sin resultados") {

                    // AÃ±adir nuevo RO
                    _self.addROVinculado(idItem).then(saved => {

                        if (saved) {

                            // AÃ±adir el RO a las listas
                            // Seleccionamos el objeto del RO
                            let cro = _self.loadedResources.find(ro => {
                                return ro.entityID == idItem
                            })

                            // Pinta el RO
                            var item = $(_self.generateHtmlItem(cro))
                            _self.tagsWrappper.append(item)
                            _self.deleteEvent(item, cro)
                        }
                        _self.hiddenResults() // VacÃ­a los resultados de la bÃºsqueda
                        _self.inputSearch.val('') // VacÃ­a el campo de bÃºsqueda
                    })

                }

            })
            // Delete list item  
        }


        /**
         * FunciÃ³n para aÃ±adir los ROs vinculados y realizar la llamada ajax
         */
        addROVinculado(id) {

            let arg = {};
            arg.resourceRO = docId;
            arg.pIdROId = id;
            arg.pIdGnossUser = currentId;
            MostrarUpdateProgress();
            return new Promise((resolve, reject) => {
                $.post(urlAddRo.toString(), arg, function (data) {
                    OcultarUpdateProgress()
                    resolve(data)
                    // cargarROsVinculados()
                });
            })

            // cerrarVincularRO()
        }

        /**
         * AÃ±ade un tag al modal
         * @@param texto, texto del tag a aÃ±adir
         */
        deleteEvent(item, ro) {
            var _self = this

            
            this.addedROs.push(ro.entityID)
            this.excludedItems.push(ro.entityID)

            item.off('click').on('click', '.link-delete', function(e) {

                if (ro.origin) 
                {
                    _self.deleteLink(ro.entityID, docId)
                } else {
                    _self.deleteLink(docId, ro.entityID)
                }

                let cid = ro.entityID
                item.remove()
                _self.addedROs = _self.addedROs.filter(id => id != cid)
                _self.excludedItems = _self.excludedItems.filter(id => id != cid)
            })
        }

        /**
         * Remove all tags html
         */
        removeTags() {
            this.tagsWrappper.html('')
        }

        /**
         * MÃ©todo que genera un evento para el botÃ³n "guardar" y devuelve el nÃºmero de TAGS aÃ±adidas
         * @@return promise (array) con la lista de resultados 
         */
        closeBtnClick() {
            let _self = this
            return new Promise((resolve, reject) => {

                this.modal.find('.btnclosemodal').off('click').on('click', function(e) {
                
                    let result = new Array()
                    _self.tagsWrappper.find('li .texto').each((i, item) => {
                        result.push(item.innerText)
                    })
                    resolve(result)
                })
            })
        }


        /**
         * ComprobarÃ¡ la tecla pulsada, y si no se encuentra entre las excluidas, darÃ¡ lo introducido por vÃ¡lido devolviendo true
         * Si se pulsa una tecla de las excluidas, devolverÃ¡ false y por lo tanto el metabuscador no deberÃ­a iniciarse
         * @@param {any} event: Evento o tecla pulsada en el teclado
         * @@return bool, devuelve si la tecla pulsada es vÃ¡lida o no
         */
        validarKeyPulsada (event) {
            const keyPressed = this.ignoreKeysToBuscador.find(key => key == event.keyCode);
            if (keyPressed) {
                return false
            }
            return true;
        }

        /**
         * Realiza la peticiÃ³n ajax (GET) para buscar los ROs sugeridos en el input
         * @@param {string} inputVal: Texto para la bÃºsqueda
         * @@return promise (array) con la lista de resultados 
         */
        searchCall (inputVal) {
            var _self = this
            // Set the url parameters
            // this.url.searchParams.set('tagInput', inputVal)
            let args = {
                text: inputVal,
                pIdGnossUser: currentId,
                listItemsRelated: _self.excludedItems
            }

            return new Promise((resolve) => {
                $.post(urlSearchLinked.toString(), args , function (data) {
                    _self.loadedResources = data;
                    resolve(data.filter(itm => !_self.addedROs.includes(itm.entityID)))
                });
            })
        }


        /**
         * MÃ©todo que borra un RO vinculado
         * @@param {string} idResource: Id del recurso sobre el que borrar
         * @@param {string} idLink: Id del recurso a borrar 
         */
        deleteLink(idResource, idLink) {

            var _self = this

            let arg = {};
            arg.resourceRO = idResource;
            arg.pIdROId = idLink;
            arg.pIdGnossUser = currentId;
            $.post(urlDel.toString(), arg, function (data) {
                // _self.cargarROsVinculados()
            });
        }
    }

    var modalSearchTagsVinculados = new ModalSearchTagsVinculados()


    /**
     * FunciÃ³n para iniciar la vinculaciÃ³n de ROs 
     */
    function startVincularRo() {
        
        modalSearchTagsVinculados.init()
        return;
    }

    /**
     * FunciÃ³n que cargar mÃ¡s ROs
     */
    function cargarMasRO() {
        MostrarUpdateProgress();
        MontarResultadosScroll.launchCallWaypoint(() => {
            OcultarUpdateProgress()
        })
    }


    function short(a, b) {
        return a - b
    }





    ////////////////////////////////////////////////
    //// Funciones para la ficha del RO
    ////////////////////////////////////////////////


    function nuevaAnotacion(idEle) {

            // Obtenemos el texto
            let texto = document.getElementById(idEle).value

            $("#modal-nueva-anotacion").modal("hide")

            if (texto != "") {
                anotaciones.newUpdateAnnotation(texto).then((data) => {
                    document.getElementById(idEle).value = ""
                    anotaciones.loadInRo().then((data) => {
           
                            // Ahora pintamos los datos si hay elementos
                            anotaciones.printItems("annotations-tab", "annotations-panel", null, () => {
                                // Comportamiento Ver MÃ¡s / Ver Menos
                                comportamientoVerMasVerMenos.init();
                            })
                        
                    })
                })
            }
        }

        /**
         * Funcion que muestra todo el texto de la descripcion de una anotacion
         * param id, id de la anotacion
         * param text, texto de la anotacion
         */
        function readMoreAnotacion(idAnnotation,text){
            $(document.getElementById(idAnnotation)).find("div.desc p").html(text);  
        }
        /**
         * FunciÃ³n que modifica la notificaciÃ³n 
         * param idEle, string con el id del textArea para obtener el texto introducido
         * param idCurrentAnnotation, string con el id de la anotaciÃ³n para modificar la misma
         */
        function updateAnotacion(idCurrentAnnotation, oldText) {

            let modal = document.getElementById("modal-editar-anotacion")
            let modalTextArea = modal.getElementsByClassName("textareaInput")
            modalTextArea[0].value = oldText.replaceAll("<br />", "\n").replaceAll("&gt",">").replaceAll("&lt","<").replaceAll("&quot","\"").replaceAll("&apos","\'").replaceAll("&amp","&");

            $(modal).modal("show")

            // Evento para el botÃ³n de guardado
            $(modal).find("#btn-modal-editar-anotacion").off("click").on("click", function () {

                // modal.getElementsByClassName("textareaInput")
                $(modal).modal("hide")
                // Obtenemos el texto
                let texto = modal.getElementsByClassName("textareaInput")[0].value

                if (texto != "") {
                    anotaciones.newUpdateAnnotation(texto, idCurrentAnnotation).then((data) => {
                        modal.getElementsByClassName("textareaInput")[0].value = ""
                        anotaciones.loadInRo().then((data) => {
                            if (data.length > 0) {
                                // Ahora pintamos los datos si hay elementos
                                anotaciones.printItems("annotations-tab", "annotations-panel", null, () => {
                                    // Comportamiento Ver MÃ¡s / Ver Menos
                                    comportamientoVerMasVerMenos.init();
                                })
                            }
                        })
                    })
                }
            });

        }
        function borrarAnotacion(idCurrentAnnotation) {
            anotaciones.deleteAnnotation(idCurrentAnnotation).then((data) => {
                anotaciones.loadInRo().then((data) => {
                
                    // Ahora pintamos los datos si hay elementos
                    anotaciones.printItems("annotations-tab", "annotations-panel", null, () => {
                        // Comportamiento Ver MÃ¡s / Ver Menos
                        comportamientoVerMasVerMenos.init();
                    })
                
                })
            })
        }
    // Comportamiento pÃ¡gina proyecto
    var comportamientoPaginaDocumento = {
        tabActive: null,
        init: function () {
            this.config();
            $('#informacion-tab').click();
            return;
        },
        config: function () {
            var that = this;
            
            $('#relacionados-tab').unbind().click(function (e) {
                e.preventDefault();
                that.tabActive = "relacionados";
                buscadorPersonalizado.init("@Html.Translate("RELACIONADOS")", "#contenedorBuscadorRelacionados", "searchRelacionadosROs=@pResearchObject.GNOSSID.Split('_')[1].ToUpper()", "", "rdf:type=researchobject", "@Comunidad.Url", "@Comunidad.Key.ToString()", "", function() {
                    $('#panNumResultados').hide();
                    filtrarMovil.init()
                });
            });
            //$('#citas-tab').unbind().click(function (e) {
            //    e.preventDefault();
            //    that.tabActive = "citas";
            //    buscadorPersonalizado.init("@Html.Translate("CITAS")", "#contenedorBuscadorCitas", "bibo:cites=http://gnoss/@pResearchObject.GNOSSID.Split('_')[1].ToUpper()", "dct:issued", "rdf:type=researchobject", "@Comunidad.Url", "@Comunidad.Key.ToString()", null, function() {
            //        filtrarMovil.init()
            //    });
            //});
            $('#referencias-tab').unbind().click(function (e) {
                e.preventDefault();
                that.tabActive = "referencias";
                buscadorPersonalizado.init("@Html.Translate("REFERENCIAS")", "#contenedorBuscadorReferencias", "searchReferenciasDocumento=@pResearchObject.GNOSSID.Split('_')[1].ToUpper()", "dct:issued", "rdf:type=researchobject", "@Comunidad.Url", "@Comunidad.Key.ToString()", null, function() {
                    filtrarMovil.init()
                });
            });

            $('#linked-tab').unbind().on('click', function (e) {
                e.preventDefault();
                that.tabActive = "linked";

                buscadorPersonalizado.orders=null;
                // Realmente no funciona correctamente, he tenido que crear un botÃ³n para cargar mÃ¡s.
                // Inicia
                buscadorPersonalizado.init("@Html.Translate("LISTADO_RESEARCHOBJECTS_DOCUMENTOS_VINCULADOS")", "#contenedorBuscadorResearchObjectsLinked", "linkedROs=http://gnoss/@pResearchObject.GNOSSID.Split('_')[1].ToUpper()", "dct:issued", "rdf:type=researchobject|rdf:type=document", "@Comunidad.Url", "@Comunidad.Key.ToString()", null, function() {
                    filtrarMovil.init()
                });


            });

             $(function () {
                // Obtiene las notas y las pinta
                anotaciones.loadInRo().then((data) => {
                        // Para que se selecione la pestaÃ±a de anotaciones si esta seleccionada
                        var hash = location.hash.replace(/^#/, '');  // ^ means starting, meaning only match the first hash
                        if (hash) {
                            $('.nav-tabs a[href="#' + hash + '"]').tab('show');

                        } 

                        // Change hash for page-reload
                        $('.nav-tabs a').on('shown.bs.tab', function (e) {
                            window.location.hash = e.target.hash;
                        })           
                        // Ahora pintamos los datos si hay elementos
                        anotaciones.printItems("annotations-tab", "annotations-panel", null, () => {
                            // Comportamiento Ver MÃ¡s / Ver Menos
                            comportamientoVerMasVerMenos.init();
                        })
                    
                })
            });

            return;
        }
        
    };

    $(function () {
        comportamientoPaginaDocumento.init();
    });

    // Ejecuta cuando la pÃ¡gina estÃ¡ cargada
    $( document ).ready(function() {
        // cargarROsVinculados()
    });

    // Acciones a llevar a cabo en el filtrado.
    function accionFiltrado() {
        if(comportamientoPaginaDocumento.tabActive == "referencias")
        {
            // var parametros = ObtenerHash2();
            // CargarGraficaReferencias("@pResearchObject.GNOSSID.Split('_')[1].ToUpper()", parametros);
        } else if (comportamientoPaginaDocumento.tabActive == "citas")
        {
            // var parametros = ObtenerHash2();
            // CargarGraficaCitas("@pResearchObject.GNOSSID.Split('_')[1].ToUpper()", parametros);
        }
    }




</script>

@functions{
    public string getUrlFrame (string url)
    {
        string urlFrame = "";
        string idPublish;

        if (url != null)
        {
            // Get figshare -- "https://figshare.com/articles/dataset/BPI_Challenge_2013_incidents/12693914?file=24033596"
            if (url.Contains("//figshare.com"))
            {
                // Get the before text of the id
                string charsBefore = System.Text.RegularExpressions.Regex.Match(url, @"articles/[^/""\s]+/[^/""\s]+/").Value;

                // Get the id with the before text
                idPublish = System.Text.RegularExpressions.Regex.Match(url, @"articles/[^/,'""\s]+/[^/,'""\s]+/\d+").Value;
                // Get the ID
                idPublish = idPublish.Remove(0, charsBefore.Length);

                // Build the iframe
                if (idPublish != "")
                {
                    urlFrame = "https://widgets.figshare.com/articles/"+ idPublish +"/embed";
                }
            }

            if (url.Contains("slideshare.net"))
            {

                try
                {
                    // Get the product
                    var ajaxCall = new AjaxCall("https://www.slideshare.net/");
                    var content = ajaxCall.GetProductAsync(url).GetAwaiter().GetResult();
                    var urlFrameTmp = System.Text.RegularExpressions.Regex.Match(content, @"<meta itemprop=""embedURL"" content=""[^'""\s]+"">").Value;
                    // urlFrame = System.Text.RegularExpressions.Regex.Match(urlFrame, @"<meta itemprop=""embedURL"" content=""").Value;
                    urlFrameTmp = urlFrameTmp.Remove(0, "<meta itemprop=\"embedURL\" content=\"".Length);

                    if (urlFrameTmp != "")
                    {
                        urlFrame = System.Text.RegularExpressions.Regex.Match(urlFrameTmp, @"[^"">]+").Value;
                    }

                }
                catch (Exception e)
                {
                    Console.WriteLine(e.Message);
                }
            }

            if (url.Contains("//github.com"))
            {

                // https://api.github.com/repos/HerculesCRUE/HerculesED/contents/
                // https://github.com/HerculesCRUE/HerculesED

                // Get the id with the before text
                idPublish = System.Text.RegularExpressions.Regex.Match(url, @"github.com/[^/,'""\s]+/[^/,'""\s]+").Value;
                // Get the ID
                idPublish = idPublish.Remove(0, "github.com/".Length);
                // Build the iframe

                var urlGitHubApiFolder = "";
                if (idPublish != "")
                {  
                    urlGitHubApiFolder = "https://api.github.com/repos/"+ idPublish +"/contents/";
                }

                <div class="col-12">
                    <div class="wrapCol">
                        <div id="gitHubFolder" class="gitHubFolder">
                            <div class="title"></div>
                            <ul class="folderStructure">
                            </ul>
                            <div class="link"></div>
                        </div>
                    </div>
                </div>
                <div class="col-12">
                    <div class="wrapCol">
                        <div id="gitHubReadmeMDFIle" class="gitHubReadmeMDFIle">
                            <div class="filename"></div>
                            <div class="file-text markdown-body"></div>
                        </div>
                    </div>
                </div>
                <script>
                    // Scrit to get data from github by ajax call & print the result
                    var urlGitHubApiFolder = "@urlGitHubApiFolder";
                    if (urlGitHubApiFolder) {
                        $.ajax({
                            type: "GET",
                            url: urlGitHubApiFolder,
                            dataType: 'jsonp',
                            success: function (data) {

                                var gitHubJson = data.data;

                                // Separate the dirs and files
                                var folders = [...gitHubJson].filter(e => e.type == "dir");
                                var files = [...gitHubJson].filter(e => e.type == "file");

                                // Order by name
                                folders.sort((a, b) => {
                                    return a.name - b.name;
                                });
                                files.sort((a, b) => {
                                    return a.name - b.name;
                                });

                                // Print each folder
                                folders.forEach(e => {
                                    $('<li class="folder"><span></span>'+ e.name +'</li>').appendTo('#gitHubFolder ul');
                                });

                                var fileReadme = "";
                                var fileReadmeName = "";
                                // Print each file
                                files.forEach(e => {
                                    $('<li class="file"><span></span>'+ e.name +'</li>').appendTo('#gitHubFolder ul');
                                    fileReadme = (e.name.toLowerCase() == "readme.md") ? e.download_url : fileReadme;
                                    fileReadmeName = (e.name.toLowerCase() == "readme.md") ? e.name : fileReadmeName;
                                });

                                // Print the title
                                let title = $('#idPage').data('title')
                                $('#gitHubFolder .title').html('<a href="@url" target="_blank">' + title + '</a>');

                                // Print link
                                // $('#gitHubFolder .link').html('<a href="@url" target="_blank"> @url </a>');

                                if (fileReadme != null) {
                                    getReadmemd(fileReadme, fileReadmeName);
                                } else {
                                    $('#gitHubReadmeMDFIle').hide();
                                }

                            } 
                        });
                    } else {
                        $('#gitHubFolder').hide();
                        $('#gitHubReadmeMDFIle').hide();
                    }
                    

                    // Function to convert markdown README.md file to html
                    var getReadmemd = function (fileUrl, fileName) {

                        $.ajax({
                            type: "GET",
                            url: fileUrl,
                            dataType: 'text',
                            success: function (readmeFileText) {
                            

                                var options = {
                                    "omitExtraWLInCodeBlocks": false,
                                    "noHeaderId": false,
                                    "prefixHeaderId": false,
                                    "rawPrefixHeaderId": false,
                                    "ghCompatibleHeaderId": false,
                                    "rawHeaderId": false,
                                    "headerLevelStart": false,
                                    "parseImgDimensions": false,
                                    "simplifiedAutoLink": true,
                                    "excludeTrailingPunctuationFromURLs": false,
                                    "literalMidWordUnderscores": false,
                                    "literalMidWordAsterisks": false,
                                    "strikethrough": false,
                                    "tables": true,
                                    "tablesHeaderId": false,
                                    "ghCodeBlocks": true,
                                    "tasklists": true,
                                    "smoothLivePreview": false,
                                    "smartIndentationFix": false,
                                    "disableForced4SpacesIndentedSublists": false,
                                    "simpleLineBreaks": false,
                                    "requireSpaceBeforeHeadingText": false,
                                    "ghMentions": false,
                                    "ghMentionsLink": "https://github.com/{u}",
                                    "encodeEmails": true,
                                    "openLinksInNewWindow": true,
                                    "backslashEscapesHTMLTags": false,
                                    "emoji": true,
                                    "underline": true,
                                    "completeHTMLDocument": false,
                                    "metadata": false,
                                    "splitAdjacentBlockquotes": false
                                }

                                // Convert markdown to html
                                var converter = new showdown.Converter(options);
                                
                                var html = converter.makeHtml(readmeFileText);

                                // Set the HTML
                                $('#gitHubReadmeMDFIle .file-text').html(html)
                                // Set the file Name
                                $('#gitHubReadmeMDFIle .filename').text(fileName)

                            } 
                        });

                    }

                
                </script>


            }
        }

        return urlFrame;
    }

    class AjaxCall
    {
        public HttpClient client = new HttpClient();

        public AjaxCall (string baseUrl)
        {
            client.BaseAddress = new Uri(baseUrl);
            client.DefaultRequestHeaders.Accept.Clear();
            client.DefaultRequestHeaders.Accept.Add(
                new MediaTypeWithQualityHeaderValue("application/json"));
        }

        public async Task<string> GetProductAsync(string path)
        {
            string product = null;
            HttpResponseMessage response = await client.GetAsync(path);
            if (response.IsSuccessStatusCode)
            {
                product = await response.Content.ReadAsStringAsync();
            }
            return product;
        }
    }
}


@functions{
    public class RDFPropertyAttribute : Attribute
    {
        public RDFPropertyAttribute(string pRDFA)
        {
            mRDFA = pRDFA;
        }
        protected string mRDFA;
        public string RDFProperty
        {
            get { return mRDFA; }
        }
    }

    [AttributeUsage(AttributeTargets.All, AllowMultiple = true)]
    public class LABELAttribute : Attribute
    {
        private GnossOCBase.LanguageEnum IdiomaDefecto = GnossOCBase.LanguageEnum.es;
        private GnossOCBase.LanguageEnum midioma;
        private string mlabel;
        public LABELAttribute(GnossOCBase.LanguageEnum idioma, string label)
        {
            mlabel = label;
            midioma = idioma;
        }
        public string LABEL(GnossOCBase.LanguageEnum pLang)
        {
            if (midioma.Equals(pLang))
            {
                return mlabel;
            }
            return "";
        }
    }

    public class GnossOCBase
    {
        public enum LanguageEnum
        {
            es,
            en,
            pt,
            ca,
            eu,
            gl,
            fr,
            de,
            it,
        }
        internal List<string> prefList = new List<string>();
        internal string mGNOSSID;
        internal string mURL;
        internal Guid resourceID;
        internal Guid articleID;
        private static List<string> NoEnIdiomas = new List<string> { "Nï¿½o", "Non", "Ez", "Nein", "No" };
        public List<string> tagList = new List<string>();
        public GnossOCBase()
        {
            prefList.Add("xmlns:foaf=\"http://xmlns.com/foaf/0.1/\"");
            prefList.Add("xmlns:vivo=\"http://vivoweb.org/ontology/core#\"");
            prefList.Add("xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"");
            prefList.Add("xmlns:owl=\"http://www.w3.org/2002/07/owl#\"");
            prefList.Add("xmlns:bibo=\"http://purl.org/ontology/bibo/\"");
            prefList.Add("xmlns:roh=\"http://w3id.org/roh/\"");
            prefList.Add("xmlns:dct=\"http://purl.org/dc/terms/\"");
            prefList.Add("xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"");
            prefList.Add("xmlns:xsd=\"http://www.w3.org/2001/XMLSchema#\"");
            prefList.Add("xmlns:obo=\"http://purl.obolibrary.org/obo/\"");
            prefList.Add("xmlns:vcard=\"https://www.w3.org/2006/vcard/ns#\"");
            prefList.Add("xmlns:dc=\"http://purl.org/dc/elements/1.1/\"");
            prefList.Add("xmlns:gn=\"http://www.geonames.org/ontology#\"");

            this.resourceID = Guid.NewGuid();
            this.articleID = Guid.NewGuid();
        }

        public string GNOSSID
        {
            get { return mGNOSSID; }
            set
            {
                this.mGNOSSID = value;
                var GnossIDSplit = this.mGNOSSID.Split('_');
                Guid nuevoResource = Guid.Parse(GnossIDSplit[GnossIDSplit.Count() - 2]);
                Guid nuevoArticle = Guid.Parse(GnossIDSplit.Last());
                if (!this.ResourceID.Equals(nuevoResource))
                {
                    this.resourceID = nuevoResource;
                }
                if (!this.ArticleID.Equals(nuevoArticle))
                {
                    this.articleID = nuevoArticle;
                }
            }
        }
        public string URL
        {
            get { return mURL; }
        }

        public Guid ResourceID
        {
            get { return resourceID; }
            set
            {
                this.resourceID = value;
                string primeraParte = this.mGNOSSID.Substring(0, this.mGNOSSID.LastIndexOf('/') + 1);
                string antiguoGuid = this.mGNOSSID.Substring(this.mGNOSSID.LastIndexOf('/') + 1, this.mGNOSSID.LastIndexOf('_'));
                string ultimaParte = this.mGNOSSID.Substring(this.mGNOSSID.LastIndexOf('_') + 1);
                if (!antiguoGuid.Equals(this.resourceID.ToString()))
                {
                    this.mGNOSSID = $"{primeraParte}{this.resourceID.ToString()}{ultimaParte}";
                }
            }
        }

        public Guid ArticleID
        {
            get { return articleID; }
            set
            {
                this.articleID = value;
                string primeraParte = this.mGNOSSID.Substring(0, this.mGNOSSID.LastIndexOf('_') + 1);
                string antiguoGuid = this.mGNOSSID.Substring(this.mGNOSSID.LastIndexOf('_') + 1);
                if (!antiguoGuid.Equals(this.articleID.ToString()))
                {
                    this.mGNOSSID = $"{primeraParte}{this.articleID.ToString()}";
                }
            }
        }

        public static string GetPropertyValueSemCms(SemanticPropertyModel pProperty)
        {
            if (pProperty != null && pProperty.PropertyValues.Count > 0)
            {
                return pProperty.PropertyValues[0].Value;
            }
            return "";
        }

        public static int? GetNumberIntPropertyValueSemCms(SemanticPropertyModel pProperty)
        {
            if (pProperty != null && pProperty.PropertyValues.Count > 0 && !string.IsNullOrEmpty(pProperty.PropertyValues[0].Value))
            {
                return int.Parse(pProperty.PropertyValues[0].Value);
            }
            return 0;
        }

        public static int? GetNumberIntPropertyMultipleValueSemCms(SemanticPropertyModel.PropertyValue pProperty)
        {
            if (pProperty != null && !string.IsNullOrEmpty(pProperty.Value))
            {
                return int.Parse(pProperty.Value);
            }
            return 0;
        }

        public static float? GetNumberFloatPropertyValueSemCms(SemanticPropertyModel pProperty)
        {
            if (pProperty != null && pProperty.PropertyValues.Count > 0 && !string.IsNullOrEmpty(pProperty.PropertyValues[0].Value))
            {
                return float.Parse(pProperty.PropertyValues[0].Value.Replace('.', ','));
            }
            return 0;
        }

        public static DateTime? GetDateValuePropertySemCms(SemanticPropertyModel pProperty)
        {
            string stringDate = GetPropertyValueSemCms(pProperty);
            if (!string.IsNullOrEmpty(stringDate))
            {
                int year = 0;
                int month = 0;
                int day = 0;
                if (stringDate.Contains('/'))
                {
                    day = int.Parse(stringDate.Split('/')[0]);
                    month = int.Parse(stringDate.Split('/')[1]);
                    year = int.Parse(stringDate.Split('/')[2].Split(' ')[0]);
                }
                else
                {
                    year = int.Parse(stringDate.Substring(0, 4));
                    month = int.Parse(stringDate.Substring(4, 2));
                    day = int.Parse(stringDate.Substring(6, 2));
                }
                if (stringDate.Length == 14)
                {
                    if (month == 0 || day == 0)
                    {
                        return new DateTime(year);
                    }
                    else
                    {
                        int hour = int.Parse(stringDate.Substring(8, 2));
                        int minute = int.Parse(stringDate.Substring(10, 2));
                        int second = int.Parse(stringDate.Substring(12, 2));
                        return new DateTime(year, month, day, hour, minute, second);
                    }
                }
                else
                {
                    return new DateTime(year, month, day);
                }
            }
            return null;
        }

        public static bool GetBooleanPropertyValueSemCms(SemanticPropertyModel pProperty)
        {
            bool resultado = false;
            if (pProperty != null && pProperty.PropertyValues.Count > 0 && !string.IsNullOrEmpty(pProperty.PropertyValues[0].Value))
            {
                if (!bool.TryParse(pProperty.PropertyValues[0].Value, out resultado))
                {
                    resultado = !NoEnIdiomas.Contains(pProperty.PropertyValues[0].Value);
                }
            }
            return resultado;
        }

        internal virtual void GetProperties()
        {
        }

        internal virtual void GetEntities()
        {
        }

        internal string GetExtension(string file)
        {
            return file.Substring(file.LastIndexOf('.'));
        }


        public string GetPropertyURI(string nombrePropiedad)
        {
            Type type = this.GetType();
            PropertyInfo mInfo = type.GetProperty(nombrePropiedad);
            if (mInfo != null)
            {
                Attribute attr = Attribute.GetCustomAttribute(mInfo, typeof(RDFPropertyAttribute));
                if (attr != null)
                {
                    return ((RDFPropertyAttribute)attr).RDFProperty;
                }
            }
            return "";
        }



        public string GetLabel(string nombrePropiedad, LanguageEnum pLang)
        {
            Type type = this.GetType();
            PropertyInfo mInfo = type.GetProperty(nombrePropiedad);

            if (mInfo != null)
            {
                Attribute[] attr = Attribute.GetCustomAttributes(mInfo, typeof(LABELAttribute));
                {
                    foreach (Attribute atributo in attr)
                    {
                        if (atributo != null)
                        {
                            if (!((LABELAttribute)atributo).LABEL(pLang).Equals(""))
                            {
                                return ((LABELAttribute)atributo).LABEL(pLang);
                            }
                        }
                    }
                }
            }

            return "";
        }

        public int GetID() { return 0; }
    }

    public class FDocument : GnossOCBase
    {

        public FDocument() : base() { }

        public FDocument(SemanticResourceModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.RootEntities[0].Entity.Uri;
            SemanticPropertyModel propFoaf_primaryTopic = pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/primaryTopic");
            if (propFoaf_primaryTopic != null && propFoaf_primaryTopic.PropertyValues.Count > 0)
            {
                this.Foaf_primaryTopic = new PublicationIdentifierType(propFoaf_primaryTopic.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Foaf_topic = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/topic"));
            this.Dc_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title"));
        }

        public FDocument(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            SemanticPropertyModel propFoaf_primaryTopic = pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/primaryTopic");
            if (propFoaf_primaryTopic != null && propFoaf_primaryTopic.PropertyValues.Count > 0)
            {
                this.Foaf_primaryTopic = new PublicationIdentifierType(propFoaf_primaryTopic.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Foaf_topic = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/topic"));
            this.Dc_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title"));
        }

        public virtual string RdfType { get { return "http://xmlns.com/foaf/0.1/ResearchObject"; } }
        public virtual string RdfsLabel { get { return "http://xmlns.com/foaf/0.1/ResearchObject"; } }

        [LABEL(LanguageEnum.es, "Identificador de Publicacion")]
        [RDFProperty("http://xmlns.com/foaf/0.1/primaryTopic")]
        public PublicationIdentifierType Foaf_primaryTopic { get; set; }

        [LABEL(LanguageEnum.es, "Topic")]
        [RDFProperty("http://xmlns.com/foaf/0.1/topic")]
        public string Foaf_topic { get; set; }

        [LABEL(LanguageEnum.es, "Title")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public string Dc_title { get; set; }
    }

    public class PublicationIdentifierType : GnossOCBase
    {

        public PublicationIdentifierType() : base() { }

        public PublicationIdentifierType(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_title = new Dictionary<LanguageEnum, string>
            ();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/PublicationIdentifierType"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/PublicationIdentifierType"; } }
        [LABEL(LanguageEnum.es, "Tipo de publicaciÃ³n")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string>
        Dc_title
        { get; set; }

        [LABEL(LanguageEnum.es, "Identificador del tipo de publicaciÃ³n")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }
    }

    public class GeographicRegion : GnossOCBase
    {

        public GeographicRegion() : base() { }

        public GeographicRegion(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

        }

        public virtual string RdfType { get { return "http://vivoweb.org/ontology/core#GeographicRegion"; } }
        public virtual string RdfsLabel { get { return "http://vivoweb.org/ontology/core#GeographicRegion"; } }
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }

        [LABEL(LanguageEnum.es, "Ãmbito geogrÃ¡fico")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }

    }

    public class Event : GnossOCBase
    {

        public Event() : base() { } 

        public Event(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propBibo_organizer = pSemCmsModel.GetPropertyByPath("http://purl.org/ontology/bibo/organizer");
            if(propBibo_organizer != null && propBibo_organizer.PropertyValues.Count > 0)
            {
                this.Bibo_organizer = new Organization(propBibo_organizer.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            SemanticPropertyModel propVcard_hasCountryName = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasCountryName");
            if(propVcard_hasCountryName != null && propVcard_hasCountryName.PropertyValues.Count > 0)
            {
                this.Vcard_hasCountryName = new Feature(propVcard_hasCountryName.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            SemanticPropertyModel propVivo_geographicFocus = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#geographicFocus");
            if(propVivo_geographicFocus != null && propVivo_geographicFocus.PropertyValues.Count > 0)
            {
                this.Vivo_geographicFocus = new GeographicRegion(propVivo_geographicFocus.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            this.Dc_type = new List<EventType>();
            SemanticPropertyModel propDc_type = pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/type");
            if(propDc_type != null && propDc_type.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propDc_type.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        EventType dc_type = new EventType(propValue.RelatedEntity,idiomaUsuario);
                        this.Dc_type.Add(dc_type);
                    }
                }
            }
            SemanticPropertyModel propVcard_hasRegion = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasRegion");
            if(propVcard_hasRegion != null && propVcard_hasRegion.PropertyValues.Count > 0)
            {
                this.Vcard_hasRegion = new Feature(propVcard_hasRegion.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            this.Roh_geographicFocusOther = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/geographicFocusOther"));
            this.Vivo_start= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#start"));
            this.Vcard_locality = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#locality"));
            this.Roh_withExternalAdmissionsCommittee= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/withExternalAdmissionsCommittee"));
            this.Vivo_end= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#end"));
            this.Dc_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title"));
        }

        public virtual string RdfType { get { return "http://purl.org/ontology/bibo/Event"; } }
        public virtual string RdfsLabel { get { return "http://purl.org/ontology/bibo/Event"; } }

        [LABEL(LanguageEnum.es,"http://purl.org/ontology/bibo/organizer")]
        [RDFProperty("http://purl.org/ontology/bibo/organizer")]
        public  Organization Bibo_organizer  { get; set;} 
        public string IdBibo_organizer  { get; set;} 

        [LABEL(LanguageEnum.es,"https://www.w3.org/2006/vcard/ns#hasCountryName")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#hasCountryName")]
        public  Feature Vcard_hasCountryName  { get; set;} 
        public string IdVcard_hasCountryName  { get; set;} 

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#geographicFocus")]
        [RDFProperty("http://vivoweb.org/ontology/core#geographicFocus")]
        public  GeographicRegion Vivo_geographicFocus  { get; set;} 
        public string IdVivo_geographicFocus  { get; set;} 

        [LABEL(LanguageEnum.es,"http://purl.org/dc/elements/1.1/type")]
        [RDFProperty("http://purl.org/dc/elements/1.1/type")]
        public  List<EventType> Dc_type { get; set;}
        public List<string> IdsDc_type { get; set;}

        [LABEL(LanguageEnum.es,"https://www.w3.org/2006/vcard/ns#hasRegion")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#hasRegion")]
        public  Feature Vcard_hasRegion  { get; set;} 
        public string IdVcard_hasRegion  { get; set;} 

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/geographicFocusOther")]
        [RDFProperty("http://w3id.org/roh/geographicFocusOther")]
        public  string Roh_geographicFocusOther { get; set;}

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#start")]
        [RDFProperty("http://vivoweb.org/ontology/core#start")]
        public  DateTime? Vivo_start { get; set;}

        [LABEL(LanguageEnum.es,"https://www.w3.org/2006/vcard/ns#locality")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#locality")]
        public  string Vcard_locality { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/withExternalAdmissionsCommittee")]
        [RDFProperty("http://w3id.org/roh/withExternalAdmissionsCommittee")]
        public  bool Roh_withExternalAdmissionsCommittee { get; set;}

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#end")]
        [RDFProperty("http://vivoweb.org/ontology/core#end")]
        public  DateTime? Vivo_end { get; set;}

        [LABEL(LanguageEnum.es,"http://purl.org/dc/elements/1.1/title")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public  string Dc_title { get; set;}
    }

    public class EventType : GnossOCBase
    {

        public EventType() : base() { }

        public EventType(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/EventType"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/EventType"; } }
        [LABEL(LanguageEnum.es, "Tipo de evento")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }

        [LABEL(LanguageEnum.es, "Identificador del tipo de evento")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }

    }

    public class ResearchObject : GnossOCBase
    {

        public ResearchObject() : base() { } 

        public ResearchObject(SemanticResourceModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.RootEntities[0].Entity.Uri;
            this.Roh_annotations = new List<Annotation>();
            SemanticPropertyModel propRoh_annotations = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/annotations");
            if(propRoh_annotations != null && propRoh_annotations.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_annotations.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        Annotation roh_annotations = new Annotation(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_annotations.Add(roh_annotations);
                    }
                }
            }
            this.Roh_suggestedKnowledgeArea = new List<CategoryPath>();
            SemanticPropertyModel propRoh_suggestedKnowledgeArea = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/suggestedKnowledgeArea");
            if(propRoh_suggestedKnowledgeArea != null && propRoh_suggestedKnowledgeArea.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_suggestedKnowledgeArea.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        CategoryPath roh_suggestedKnowledgeArea = new CategoryPath(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_suggestedKnowledgeArea.Add(roh_suggestedKnowledgeArea);
                    }
                }
            }
            this.Vcard_hasLanguage = new List<Language>();
            SemanticPropertyModel propVcard_hasLanguage = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasLanguage");
            if(propVcard_hasLanguage != null && propVcard_hasLanguage.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVcard_hasLanguage.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        Language vcard_hasLanguage = new Language(propValue.RelatedEntity,idiomaUsuario);
                        this.Vcard_hasLanguage.Add(vcard_hasLanguage);
                    }
                }
            }
            SemanticPropertyModel propRoh_project = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/project");
            if(propRoh_project != null && propRoh_project.PropertyValues.Count > 0)
            {
                this.Roh_project = new Project(propRoh_project.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            this.Bibo_authorList = new List<BFO_0000023>();
            SemanticPropertyModel propBibo_authorList = pSemCmsModel.GetPropertyByPath("http://purl.org/ontology/bibo/authorList");
            if(propBibo_authorList != null && propBibo_authorList.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propBibo_authorList.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        BFO_0000023 bibo_authorList = new BFO_0000023(propValue.RelatedEntity,idiomaUsuario);
                        this.Bibo_authorList.Add(bibo_authorList);
                    }
                }
            }
            this.Roh_userKnowledgeArea = new List<CategoryPath>();
            SemanticPropertyModel propRoh_userKnowledgeArea = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/userKnowledgeArea");
            if(propRoh_userKnowledgeArea != null && propRoh_userKnowledgeArea.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_userKnowledgeArea.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        CategoryPath roh_userKnowledgeArea = new CategoryPath(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_userKnowledgeArea.Add(roh_userKnowledgeArea);
                    }
                }
            }
            this.Roh_externalKnowledgeArea = new List<CategoryPath>();
            SemanticPropertyModel propRoh_externalKnowledgeArea = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/externalKnowledgeArea");
            if(propRoh_externalKnowledgeArea != null && propRoh_externalKnowledgeArea.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_externalKnowledgeArea.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        CategoryPath roh_externalKnowledgeArea = new CategoryPath(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_externalKnowledgeArea.Add(roh_externalKnowledgeArea);
                    }
                }
            }
            this.Dc_type = new List<ResearchObjectType>();
            SemanticPropertyModel propDc_type = pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/type");
            if(propDc_type != null && propDc_type.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propDc_type.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        ResearchObjectType dc_type = new ResearchObjectType(propValue.RelatedEntity,idiomaUsuario);
                        this.Dc_type.Add(dc_type);
                    }
                }
            }
            this.Roh_hasKnowledgeArea = new List<CategoryPath>();
            SemanticPropertyModel propRoh_hasKnowledgeArea = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasKnowledgeArea");
            if(propRoh_hasKnowledgeArea != null && propRoh_hasKnowledgeArea.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_hasKnowledgeArea.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        CategoryPath roh_hasKnowledgeArea = new CategoryPath(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_hasKnowledgeArea.Add(roh_hasKnowledgeArea);
                    }
                }
            }
            this.Roh_enrichedKnowledgeArea = new List<CategoryPath>();
            SemanticPropertyModel propRoh_enrichedKnowledgeArea = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/enrichedKnowledgeArea");
            if(propRoh_enrichedKnowledgeArea != null && propRoh_enrichedKnowledgeArea.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_enrichedKnowledgeArea.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        CategoryPath roh_enrichedKnowledgeArea = new CategoryPath(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_enrichedKnowledgeArea.Add(roh_enrichedKnowledgeArea);
                    }
                }
            }
            this.Roh_releasesNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/releasesNumber"));
            this.Bibo_abstract = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/ontology/bibo/abstract"));
            this.Roh_branchesNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/branchesNumber"));
            this.Roh_updatedDate= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/updatedDate"));
            this.Roh_packagesNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/packagesNumber"));
            this.Roh_linkedCount = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/linkedCount"));
            this.Dct_issued= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/terms/issued"));
            this.Roh_forksNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/forksNumber"));
            this.Vcard_url = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#url"));
            SemanticPropertyModel propRoh_userKeywords = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/userKeywords");
            this.Roh_userKeywords = new List<string>();
            if (propRoh_userKeywords != null && propRoh_userKeywords.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_userKeywords.PropertyValues)
                {
                    this.Roh_userKeywords.Add(propValue.Value);
                }
            }
            SemanticPropertyModel propRoh_externalKeywords = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/externalKeywords");
            this.Roh_externalKeywords = new List<string>();
            if (propRoh_externalKeywords != null && propRoh_externalKeywords.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_externalKeywords.PropertyValues)
                {
                    this.Roh_externalKeywords.Add(propValue.Value);
                }
            }
            this.Dct_license = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/terms/license"));
            SemanticPropertyModel propVivo_freeTextKeyword = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#freeTextKeyword");
            this.Vivo_freeTextKeyword = new List<string>();
            if (propVivo_freeTextKeyword != null && propVivo_freeTextKeyword.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVivo_freeTextKeyword.PropertyValues)
                {
                    this.Vivo_freeTextKeyword.Add(propValue.Value);
                }
            }
            this.Roh_resolvedIssuesNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/resolvedIssuesNumber"));
            this.Bibo_doi = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/ontology/bibo/doi"));
            this.Roh_issuesNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/issuesNumber"));
            SemanticPropertyModel propRoh_suggestedKeywords = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/suggestedKeywords");
            this.Roh_suggestedKeywords = new List<string>();
            if (propRoh_suggestedKeywords != null && propRoh_suggestedKeywords.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_suggestedKeywords.PropertyValues)
                {
                    this.Roh_suggestedKeywords.Add(propValue.Value);
                }
            }
            SemanticPropertyModel propRoh_enrichedKeywords = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/enrichedKeywords");
            this.Roh_enrichedKeywords = new List<string>();
            if (propRoh_enrichedKeywords != null && propRoh_enrichedKeywords.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_enrichedKeywords.PropertyValues)
                {
                    this.Roh_enrichedKeywords.Add(propValue.Value);
                }
            }
            this.Roh_viewsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/viewsNumber"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
            this.Roh_isValidated= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isValidated"));
            this.Roh_citationLoadedCount = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/citationLoadedCount")).Value;
            this.Roh_isPublic= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isPublic"));
        }

        public ResearchObject(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Roh_annotations = new List<Annotation>();
            SemanticPropertyModel propRoh_annotations = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/annotations");
            if(propRoh_annotations != null && propRoh_annotations.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_annotations.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        Annotation roh_annotations = new Annotation(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_annotations.Add(roh_annotations);
                    }
                }
            }
            this.Roh_suggestedKnowledgeArea = new List<CategoryPath>();
            SemanticPropertyModel propRoh_suggestedKnowledgeArea = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/suggestedKnowledgeArea");
            if(propRoh_suggestedKnowledgeArea != null && propRoh_suggestedKnowledgeArea.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_suggestedKnowledgeArea.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        CategoryPath roh_suggestedKnowledgeArea = new CategoryPath(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_suggestedKnowledgeArea.Add(roh_suggestedKnowledgeArea);
                    }
                }
            }
            this.Vcard_hasLanguage = new List<Language>();
            SemanticPropertyModel propVcard_hasLanguage = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasLanguage");
            if(propVcard_hasLanguage != null && propVcard_hasLanguage.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVcard_hasLanguage.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        Language vcard_hasLanguage = new Language(propValue.RelatedEntity,idiomaUsuario);
                        this.Vcard_hasLanguage.Add(vcard_hasLanguage);
                    }
                }
            }
            SemanticPropertyModel propRoh_project = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/project");
            if(propRoh_project != null && propRoh_project.PropertyValues.Count > 0)
            {
                this.Roh_project = new Project(propRoh_project.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            this.Bibo_authorList = new List<BFO_0000023>();
            SemanticPropertyModel propBibo_authorList = pSemCmsModel.GetPropertyByPath("http://purl.org/ontology/bibo/authorList");
            if(propBibo_authorList != null && propBibo_authorList.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propBibo_authorList.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        BFO_0000023 bibo_authorList = new BFO_0000023(propValue.RelatedEntity,idiomaUsuario);
                        this.Bibo_authorList.Add(bibo_authorList);
                    }
                }
            }
            this.Roh_userKnowledgeArea = new List<CategoryPath>();
            SemanticPropertyModel propRoh_userKnowledgeArea = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/userKnowledgeArea");
            if(propRoh_userKnowledgeArea != null && propRoh_userKnowledgeArea.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_userKnowledgeArea.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        CategoryPath roh_userKnowledgeArea = new CategoryPath(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_userKnowledgeArea.Add(roh_userKnowledgeArea);
                    }
                }
            }
            this.Roh_externalKnowledgeArea = new List<CategoryPath>();
            SemanticPropertyModel propRoh_externalKnowledgeArea = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/externalKnowledgeArea");
            if(propRoh_externalKnowledgeArea != null && propRoh_externalKnowledgeArea.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_externalKnowledgeArea.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        CategoryPath roh_externalKnowledgeArea = new CategoryPath(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_externalKnowledgeArea.Add(roh_externalKnowledgeArea);
                    }
                }
            }
            this.Dc_type = new List<ResearchObjectType>();
            SemanticPropertyModel propDc_type = pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/type");
            if(propDc_type != null && propDc_type.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propDc_type.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        ResearchObjectType dc_type = new ResearchObjectType(propValue.RelatedEntity,idiomaUsuario);
                        this.Dc_type.Add(dc_type);
                    }
                }
            }
            this.Roh_hasKnowledgeArea = new List<CategoryPath>();
            SemanticPropertyModel propRoh_hasKnowledgeArea = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasKnowledgeArea");
            if(propRoh_hasKnowledgeArea != null && propRoh_hasKnowledgeArea.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_hasKnowledgeArea.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        CategoryPath roh_hasKnowledgeArea = new CategoryPath(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_hasKnowledgeArea.Add(roh_hasKnowledgeArea);
                    }
                }
            }
            this.Roh_enrichedKnowledgeArea = new List<CategoryPath>();
            SemanticPropertyModel propRoh_enrichedKnowledgeArea = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/enrichedKnowledgeArea");
            if(propRoh_enrichedKnowledgeArea != null && propRoh_enrichedKnowledgeArea.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_enrichedKnowledgeArea.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        CategoryPath roh_enrichedKnowledgeArea = new CategoryPath(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_enrichedKnowledgeArea.Add(roh_enrichedKnowledgeArea);
                    }
                }
            }
            this.Roh_releasesNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/releasesNumber"));
            this.Bibo_abstract = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/ontology/bibo/abstract"));
            this.Roh_branchesNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/branchesNumber"));
            this.Roh_updatedDate= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/updatedDate"));
            this.Roh_packagesNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/packagesNumber"));
            this.Dct_issued= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/terms/issued"));
            this.Roh_linkedCount = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/linkedCount"));
            this.Roh_forksNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/forksNumber"));
            this.Vcard_url = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#url"));
            SemanticPropertyModel propRoh_userKeywords = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/userKeywords");
            this.Roh_userKeywords = new List<string>();
            if (propRoh_userKeywords != null && propRoh_userKeywords.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_userKeywords.PropertyValues)
                {
                    this.Roh_userKeywords.Add(propValue.Value);
                }
            }
            SemanticPropertyModel propRoh_externalKeywords = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/externalKeywords");
            this.Roh_externalKeywords = new List<string>();
            if (propRoh_externalKeywords != null && propRoh_externalKeywords.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_externalKeywords.PropertyValues)
                {
                    this.Roh_externalKeywords.Add(propValue.Value);
                }
            }
            this.Dct_license = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/terms/license"));
            SemanticPropertyModel propVivo_freeTextKeyword = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#freeTextKeyword");
            this.Vivo_freeTextKeyword = new List<string>();
            if (propVivo_freeTextKeyword != null && propVivo_freeTextKeyword.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVivo_freeTextKeyword.PropertyValues)
                {
                    this.Vivo_freeTextKeyword.Add(propValue.Value);
                }
            }
            this.Roh_resolvedIssuesNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/resolvedIssuesNumber"));
            this.Bibo_doi = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/ontology/bibo/doi"));
            this.Roh_issuesNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/issuesNumber"));
            SemanticPropertyModel propRoh_suggestedKeywords = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/suggestedKeywords");
            this.Roh_suggestedKeywords = new List<string>();
            if (propRoh_suggestedKeywords != null && propRoh_suggestedKeywords.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_suggestedKeywords.PropertyValues)
                {
                    this.Roh_suggestedKeywords.Add(propValue.Value);
                }
            }
            SemanticPropertyModel propRoh_enrichedKeywords = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/enrichedKeywords");
            this.Roh_enrichedKeywords = new List<string>();
            if (propRoh_enrichedKeywords != null && propRoh_enrichedKeywords.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_enrichedKeywords.PropertyValues)
                {
                    this.Roh_enrichedKeywords.Add(propValue.Value);
                }
            }
            this.Roh_viewsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/viewsNumber"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
            this.Roh_isValidated= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isValidated"));
            this.Roh_citationLoadedCount = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/citationLoadedCount")).Value;
            this.Roh_isPublic= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isPublic"));
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/ResearchObject"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/ResearchObject"; } }
        [RDFProperty("http://w3id.org/roh/annotations")]
        public  List<Annotation> Roh_annotations { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/suggestedKnowledgeArea")]
        [RDFProperty("http://w3id.org/roh/suggestedKnowledgeArea")]
        public  List<CategoryPath> Roh_suggestedKnowledgeArea { get; set;}

        [LABEL(LanguageEnum.es,"https://www.w3.org/2006/vcard/ns#hasLanguage")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#hasLanguage")]
        public  List<Language> Vcard_hasLanguage { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/project")]
        [RDFProperty("http://w3id.org/roh/project")]
        public  Project Roh_project  { get; set;} 
        public string IdRoh_project  { get; set;} 

        [LABEL(LanguageEnum.es,"http://purl.org/ontology/bibo/authorList")]
        [RDFProperty("http://purl.org/ontology/bibo/authorList")]
        public  List<BFO_0000023> Bibo_authorList { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/userKnowledgeArea")]
        [RDFProperty("http://w3id.org/roh/userKnowledgeArea")]
        public  List<CategoryPath> Roh_userKnowledgeArea { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/externalKnowledgeArea")]
        [RDFProperty("http://w3id.org/roh/externalKnowledgeArea")]
        public  List<CategoryPath> Roh_externalKnowledgeArea { get; set;}

        [LABEL(LanguageEnum.es,"http://purl.org/dc/elements/1.1/type")]
        [RDFProperty("http://purl.org/dc/elements/1.1/type")]
        public  List<ResearchObjectType> Dc_type { get; set;}
        public List<string> IdsDc_type { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/hasKnowledgeArea")]
        [RDFProperty("http://w3id.org/roh/hasKnowledgeArea")]
        public  List<CategoryPath> Roh_hasKnowledgeArea { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/enrichedKnowledgeArea")]
        [RDFProperty("http://w3id.org/roh/enrichedKnowledgeArea")]
        public  List<CategoryPath> Roh_enrichedKnowledgeArea { get; set;}

        [RDFProperty("http://w3id.org/roh/releasesNumber")]
        public  int? Roh_releasesNumber { get; set;}

        [LABEL(LanguageEnum.es,"http://purl.org/ontology/bibo/abstract")]
        [RDFProperty("http://purl.org/ontology/bibo/abstract")]
        public  string Bibo_abstract { get; set;}

        [RDFProperty("http://w3id.org/roh/branchesNumber")]
        public  int? Roh_branchesNumber { get; set;}

        [RDFProperty("http://w3id.org/roh/linkedCount")]
        public int? Roh_linkedCount { get; set; }

        [RDFProperty("http://w3id.org/roh/updatedDate")]
        public  DateTime? Roh_updatedDate { get; set;}

        [RDFProperty("http://w3id.org/roh/packagesNumber")]
        public  int? Roh_packagesNumber { get; set;}

        [LABEL(LanguageEnum.es,"http://purl.org/dc/terms/issued")]
        [RDFProperty("http://purl.org/dc/terms/issued")]
        public  DateTime? Dct_issued { get; set;}

        [RDFProperty("http://w3id.org/roh/forksNumber")]
        public  int? Roh_forksNumber { get; set;}

        [LABEL(LanguageEnum.es,"https://www.w3.org/2006/vcard/ns#url")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#url")]
        public  string Vcard_url { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/userKeywords")]
        [RDFProperty("http://w3id.org/roh/userKeywords")]
        public  List<string> Roh_userKeywords { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/externalKeywords")]
        [RDFProperty("http://w3id.org/roh/externalKeywords")]
        public  List<string> Roh_externalKeywords { get; set;}

        [RDFProperty("http://purl.org/dc/terms/license")]
        public  string Dct_license { get; set;}

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#freeTextKeyword")]
        [RDFProperty("http://vivoweb.org/ontology/core#freeTextKeyword")]
        public  List<string> Vivo_freeTextKeyword { get; set;}

        [RDFProperty("http://w3id.org/roh/resolvedIssuesNumber")]
        public  int? Roh_resolvedIssuesNumber { get; set;}

        [LABEL(LanguageEnum.es,"http://purl.org/ontology/bibo/doi")]
        [RDFProperty("http://purl.org/ontology/bibo/doi")]
        public  string Bibo_doi { get; set;}

        [RDFProperty("http://w3id.org/roh/issuesNumber")]
        public  int? Roh_issuesNumber { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/suggestedKeywords")]
        [RDFProperty("http://w3id.org/roh/suggestedKeywords")]
        public  List<string> Roh_suggestedKeywords { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/enrichedKeywords")]
        [RDFProperty("http://w3id.org/roh/enrichedKeywords")]
        public  List<string> Roh_enrichedKeywords { get; set;}

        [RDFProperty("http://w3id.org/roh/viewsNumber")]
        public  int? Roh_viewsNumber { get; set;}

        [RDFProperty("http://w3id.org/roh/researchObjectType")]
        public  object Roh_researchObjectType  { get; set;} 
        public string IdRoh_researchObjectType  { get; set;} 

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/title")]
        [RDFProperty("http://w3id.org/roh/title")]
        public  string Roh_title { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/isValidated")]
        [RDFProperty("http://w3id.org/roh/isValidated")]
        public  bool Roh_isValidated { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/citationLoadedCount")]
        [RDFProperty("http://w3id.org/roh/citationLoadedCount")]
        public  int Roh_citationLoadedCount { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/isPublic")]
        [RDFProperty("http://w3id.org/roh/isPublic")]
        public  bool Roh_isPublic { get; set;}
    }

    public class ResearchObjectType : GnossOCBase
    {

        public ResearchObjectType() : base() { }

        public ResearchObjectType(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
            this.Dc_type = new Dictionary<LanguageEnum, string>();
            this.Dc_type.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/type")));

        }

        public virtual string RdfType { get { return "http://w3id.org/roh/ResearchObjectType"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/ResearchObjectType"; } }
        [LABEL(LanguageEnum.es, "Tipo de publicaciÃ³n")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }

        [LABEL(LanguageEnum.es, "Identificador del tipo de publicaciÃ³n")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }

        [RDFProperty("http://purl.org/dc/elements/1.1/type")]
        public Dictionary<LanguageEnum, string> Dc_type { get; set; }
    }

    public class Annotation : GnossOCBase
    {

        public Annotation() : base() { } 

        public Annotation(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dct_issued= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/terms/issued"));
            this.Roh_annotation = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/annotation"));
            SemanticPropertyModel propRdf_member = pSemCmsModel.GetPropertyByPath("http://www.w3.org/1999/02/22-rdf-syntax-ns#member");
            if(propRdf_member != null && propRdf_member.PropertyValues.Count > 0)
            {
                this.Rdf_member = new Person(propRdf_member.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/Annotation"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/Annotation"; } }

        [RDFProperty("http://purl.org/dc/terms/issued")]
        public  DateTime? Dct_issued { get; set;}

        [RDFProperty("http://w3id.org/roh/annotation")]
        public  string Roh_annotation { get; set;}

        [LABEL(LanguageEnum.es,"http://www.w3.org/1999/02/22-rdf-syntax-ns#member")]
        [RDFProperty("http://www.w3.org/1999/02/22-rdf-syntax-ns#member")]
        public  Person Rdf_member  { get; set;} 
        public string IdRdf_member  { get; set;} 
    }
    

    public class Language : GnossOCBase
    {

        public Language() : base() { }

        public Language(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Roh_percentage = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/percentage"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/Language"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/Language"; } }

        [RDFProperty("http://w3id.org/roh/percentage")]
        public float? Roh_percentage { get; set; }

        [RDFProperty("http://w3id.org/roh/title")]
        public string Roh_title { get; set; }

    }

    public class fDocument : GnossOCBase
    {

        public fDocument() : base() { }

        public fDocument(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Foaf_topic = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/topic"));
            this.Dc_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title"));
        }

        public virtual string RdfType { get { return "http://xmlns.com/foaf/0.1/ResearchObject"; } }
        public virtual string RdfsLabel { get { return "http://xmlns.com/foaf/0.1/ResearchObject"; } }

        [LABEL(LanguageEnum.es, "http://xmlns.com/foaf/0.1/topic")]
        [RDFProperty("http://xmlns.com/foaf/0.1/topic")]
        public string Foaf_topic { get; set; }

        [LABEL(LanguageEnum.es, "http://purl.org/dc/elements/1.1/title")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public string Dc_title { get; set; }
    }

    public class Group : GnossOCBase
    {

        public Group() : base() { }

        public Group(SemanticResourceModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.RootEntities[0].Entity.Uri;
            SemanticPropertyModel propVivo_affiliatedOrganization = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#affiliatedOrganization");
            if (propVivo_affiliatedOrganization != null && propVivo_affiliatedOrganization.PropertyValues.Count > 0)
            {
                this.Vivo_affiliatedOrganization = new Organization(propVivo_affiliatedOrganization.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_hasResultsGroupClassification = new List<GroupClassification>();
            SemanticPropertyModel propRoh_hasResultsGroupClassification = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasResultsGroupClassification");
            if (propRoh_hasResultsGroupClassification != null && propRoh_hasResultsGroupClassification.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_hasResultsGroupClassification.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        GroupClassification roh_hasResultsGroupClassification = new GroupClassification(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_hasResultsGroupClassification.Add(roh_hasResultsGroupClassification);
                    }
                }
            }
            this.Roh_mainResearchers = new List<BFO_0000023>();
            SemanticPropertyModel propRoh_mainResearchers = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/mainResearchers");
            if (propRoh_mainResearchers != null && propRoh_mainResearchers.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_mainResearchers.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        BFO_0000023 roh_mainResearchers = new BFO_0000023(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_mainResearchers.Add(roh_mainResearchers);
                    }
                }
            }
            this.Foaf_member = new List<BFO_0000023>();
            SemanticPropertyModel propFoaf_member = pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/member");
            if (propFoaf_member != null && propFoaf_member.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propFoaf_member.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        BFO_0000023 foaf_member = new BFO_0000023(propValue.RelatedEntity, idiomaUsuario);
                        this.Foaf_member.Add(foaf_member);
                    }
                }
            }
            SemanticPropertyModel propRoh_colaborationTypeGroup = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/colaborationTypeGroup");
            if (propRoh_colaborationTypeGroup != null && propRoh_colaborationTypeGroup.PropertyValues.Count > 0)
            {
                this.Roh_colaborationTypeGroup = new ColaborationTypeGroup(propRoh_colaborationTypeGroup.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_relevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/relevantResults"));
            SemanticPropertyModel propRoh_lineResearch = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/lineResearch");
            this.Roh_lineResearch = new List<string>();
            if (propRoh_lineResearch != null && propRoh_lineResearch.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_lineResearch.PropertyValues)
                {
                    this.Roh_lineResearch.Add(propValue.Value);
                }
            }
            this.Roh_publicationsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/publicationsNumber"));
            this.Roh_durationDays = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationDays"));
            this.Roh_normalizedCode = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/normalizedCode"));
            this.Vivo_description = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#description"));
            this.Roh_otherRelevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/otherRelevantResults"));
            this.Roh_durationMonths = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationMonths"));
            this.Roh_directedPostdocsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/directedPostdocsNumber"));
            this.Roh_researchersNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/researchersNumber"));
            this.Roh_durationYears = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationYears"));
            this.Roh_projectsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/projectsNumber"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Roh_foundationDate= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/foundationDate"));
            this.Roh_directedThesisNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/directedThesisNumber"));
            this.Roh_isPublic= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isPublic"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public Group(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propVivo_affiliatedOrganization = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#affiliatedOrganization");
            if (propVivo_affiliatedOrganization != null && propVivo_affiliatedOrganization.PropertyValues.Count > 0)
            {
                this.Vivo_affiliatedOrganization = new Organization(propVivo_affiliatedOrganization.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_hasResultsGroupClassification = new List<GroupClassification>();
            SemanticPropertyModel propRoh_hasResultsGroupClassification = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasResultsGroupClassification");
            if (propRoh_hasResultsGroupClassification != null && propRoh_hasResultsGroupClassification.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_hasResultsGroupClassification.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        GroupClassification roh_hasResultsGroupClassification = new GroupClassification(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_hasResultsGroupClassification.Add(roh_hasResultsGroupClassification);
                    }
                }
            }
            this.Roh_mainResearchers = new List<BFO_0000023>();
            SemanticPropertyModel propRoh_mainResearchers = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/mainResearchers");
            if (propRoh_mainResearchers != null && propRoh_mainResearchers.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_mainResearchers.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        BFO_0000023 roh_mainResearchers = new BFO_0000023(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_mainResearchers.Add(roh_mainResearchers);
                    }
                }
            }
            this.Foaf_member = new List<BFO_0000023>();
            SemanticPropertyModel propFoaf_member = pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/member");
            if (propFoaf_member != null && propFoaf_member.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propFoaf_member.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        BFO_0000023 foaf_member = new BFO_0000023(propValue.RelatedEntity, idiomaUsuario);
                        this.Foaf_member.Add(foaf_member);
                    }
                }
            }
            SemanticPropertyModel propRoh_colaborationTypeGroup = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/colaborationTypeGroup");
            if (propRoh_colaborationTypeGroup != null && propRoh_colaborationTypeGroup.PropertyValues.Count > 0)
            {
                this.Roh_colaborationTypeGroup = new ColaborationTypeGroup(propRoh_colaborationTypeGroup.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_relevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/relevantResults"));
            SemanticPropertyModel propRoh_lineResearch = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/lineResearch");
            this.Roh_lineResearch = new List<string>();
            if (propRoh_lineResearch != null && propRoh_lineResearch.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_lineResearch.PropertyValues)
                {
                    this.Roh_lineResearch.Add(propValue.Value);
                }
            }
            this.Roh_publicationsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/publicationsNumber"));
            this.Roh_durationDays = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationDays"));
            this.Roh_normalizedCode = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/normalizedCode"));
            this.Vivo_description = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#description"));
            this.Roh_otherRelevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/otherRelevantResults"));
            this.Roh_durationMonths = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationMonths"));
            this.Roh_directedPostdocsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/directedPostdocsNumber"));
            this.Roh_researchersNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/researchersNumber"));
            this.Roh_durationYears = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationYears"));
            this.Roh_projectsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/projectsNumber"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Roh_foundationDate= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/foundationDate"));
            this.Roh_directedThesisNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/directedThesisNumber"));
            this.Roh_isPublic= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isPublic"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public virtual string RdfType { get { return "http://xmlns.com/foaf/0.1/Group"; } }
        public virtual string RdfsLabel { get { return "http://xmlns.com/foaf/0.1/Group"; } }
        [LABEL(LanguageEnum.es, "Entidad de afiliaciÃ³n")]
        [RDFProperty("http://vivoweb.org/ontology/core#affiliatedOrganization")]
        public Organization Vivo_affiliatedOrganization { get; set; }
        public string IdVivo_affiliatedOrganization { get; set; }

        [LABEL(LanguageEnum.es, "Resultados de la clasificaciÃ³n del grupo")]
        [RDFProperty("http://w3id.org/roh/hasResultsGroupClassification")]
        public List<GroupClassification> Roh_hasResultsGroupClassification { get; set; }

        [LABEL(LanguageEnum.es, "Investigadores principal")]
        [RDFProperty("http://w3id.org/roh/mainResearchers")]
        public List<BFO_0000023> Roh_mainResearchers { get; set; }

        [LABEL(LanguageEnum.es, "Miembros")]
        [RDFProperty("http://xmlns.com/foaf/0.1/member")]
        public List<BFO_0000023> Foaf_member { get; set; }

        [LABEL(LanguageEnum.es, "Tipo de colaboraciÃ³n")]
        [RDFProperty("http://w3id.org/roh/colaborationTypeGroup")]
        public ColaborationTypeGroup Roh_colaborationTypeGroup { get; set; }
        public string IdRoh_colaborationTypeGroup { get; set; }

        [LABEL(LanguageEnum.es, "Resultados relevantes")]
        [RDFProperty("http://w3id.org/roh/relevantResults")]
        public string Roh_relevantResults { get; set; }

        [RDFProperty("http://w3id.org/roh/lineResearch")]
        public List<string> Roh_lineResearch { get; set; }

        [LABEL(LanguageEnum.es, "NÃºmero de publicaciones")]
        [RDFProperty("http://w3id.org/roh/publicationsNumber")]
        public int? Roh_publicationsNumber { get; set; }

        [LABEL(LanguageEnum.es, "DuraciÃ³n (dÃ­as)")]
        [RDFProperty("http://w3id.org/roh/durationDays")]
        public string Roh_durationDays { get; set; }

        [LABEL(LanguageEnum.es, "CÃ³digo normalizado")]
        [RDFProperty("http://w3id.org/roh/normalizedCode")]
        public string Roh_normalizedCode { get; set; }

        [LABEL(LanguageEnum.es, "DescripciÃ³n")]
        [RDFProperty("http://vivoweb.org/ontology/core#description")]
        public string Vivo_description { get; set; }

        [LABEL(LanguageEnum.es, "Resultados relevantes, otros")]
        [RDFProperty("http://w3id.org/roh/otherRelevantResults")]
        public string Roh_otherRelevantResults { get; set; }

        [LABEL(LanguageEnum.es, "DuraciÃ³n (meses)")]
        [RDFProperty("http://w3id.org/roh/durationMonths")]
        public string Roh_durationMonths { get; set; }

        [LABEL(LanguageEnum.es, "NÃºmero de postdoctorados dirigidos")]
        [RDFProperty("http://w3id.org/roh/directedPostdocsNumber")]
        public int? Roh_directedPostdocsNumber { get; set; }

        [LABEL(LanguageEnum.es, "NÃºmero de investigadores")]
        [RDFProperty("http://w3id.org/roh/researchersNumber")]
        public int? Roh_researchersNumber { get; set; }

        [LABEL(LanguageEnum.es, "DuraciÃ³n (aÃ±os)")]
        [RDFProperty("http://w3id.org/roh/durationYears")]
        public string Roh_durationYears { get; set; }

        [LABEL(LanguageEnum.es, "NÃºmero de proyectos")]
        [RDFProperty("http://w3id.org/roh/projectsNumber")]
        public int? Roh_projectsNumber { get; set; }

        [LABEL(LanguageEnum.es, "Identificador")]
        [RDFProperty("http://w3id.org/roh/crisIdentifier")]
        public string Roh_crisIdentifier { get; set; }

        [LABEL(LanguageEnum.es, "Fecha de inicio")]
        [RDFProperty("http://w3id.org/roh/foundationDate")]
        public DateTime? Roh_foundationDate { get; set; }

        [LABEL(LanguageEnum.es, "NÃºmero de tesis dirigidas")]
        [RDFProperty("http://w3id.org/roh/directedThesisNumber")]
        public int? Roh_directedThesisNumber { get; set; }

        [LABEL(LanguageEnum.es, "http://w3id.org/roh/isPublic")]
        [RDFProperty("http://w3id.org/roh/isPublic")]
        public bool Roh_isPublic { get; set; }

        [LABEL(LanguageEnum.es, "Nombre del grupo")]
        [RDFProperty("http://w3id.org/roh/title")]
        public string Roh_title { get; set; }
    }

    public class GroupClassification : GnossOCBase
    {

        public GroupClassification() : base() { }

        public GroupClassification(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Roh_groupClassificationNode = new List<Concept>();
            SemanticPropertyModel propRoh_groupClassificationNode = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/groupClassificationNode");
            if (propRoh_groupClassificationNode != null && propRoh_groupClassificationNode.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_groupClassificationNode.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        Concept roh_groupClassificationNode = new Concept(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_groupClassificationNode.Add(roh_groupClassificationNode);
                    }
                }
            }
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/GroupClassification"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/GroupClassification"; } }

        [LABEL(LanguageEnum.es, "Nodo de clasificaciÃ³n del grupo")]
        [RDFProperty("http://w3id.org/roh/groupClassificationNode")]
        public List<Concept> Roh_groupClassificationNode { get; set; }
        public List<string> IdsRoh_groupClassificationNode { get; set; }

    }

    public class ColaborationTypeGroup : GnossOCBase
    {

        public ColaborationTypeGroup() : base() { }

        public ColaborationTypeGroup(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/ColaborationTypeGroup"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/ColaborationTypeGroup"; } }
        [LABEL(LanguageEnum.es, "Tipo de colaboraciÃ³n del grupo")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }

        [LABEL(LanguageEnum.es, "Identificador del tipo de colaboraciÃ³n del grupo")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }

    }

    public class ScientificActivityDocument : GnossOCBase
    {

        public ScientificActivityDocument() : base() { }

        public ScientificActivityDocument(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
            this.Bibo_abstract = new Dictionary<LanguageEnum, string>();
            this.Bibo_abstract.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/ontology/bibo/abstract")));

        }

        public virtual string RdfType { get { return "http://w3id.org/roh/ScientificActivityDocument"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/ScientificActivityDocument"; } }
        [LABEL(LanguageEnum.es, "http://purl.org/dc/elements/1.1/title")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }

        [LABEL(LanguageEnum.es, "http://purl.org/dc/elements/1.1/identifier")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }

        [LABEL(LanguageEnum.es, "http://purl.org/ontology/bibo/abstract")]
        [RDFProperty("http://purl.org/ontology/bibo/abstract")]
        public Dictionary<LanguageEnum, string> Bibo_abstract { get; set; }
    }

    public class Project : GnossOCBase
    {

        public Project() : base() { }

        public Project(SemanticResourceModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.RootEntities[0].Entity.Uri;

            this.Roh_grantedBy = new List<Organization>();
            SemanticPropertyModel propRoh_grantedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/grantedBy");
            if (propRoh_grantedBy != null && propRoh_grantedBy.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_grantedBy.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        Organization roh_grantedBy = new Organization(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_grantedBy.Add(roh_grantedBy);
                    }
                }
            }

            this.Roh_publicAuthorList = new List<Person>();
            SemanticPropertyModel propRoh_publicAuthorList = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/publicAuthorList");
            if (propRoh_publicAuthorList != null && propRoh_publicAuthorList.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_publicAuthorList.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        Person roh_publicAuthorList = new Person(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_publicAuthorList.Add(roh_publicAuthorList);
                    }
                }
            }
            this.Roh_participates = new List<Organization>();
            SemanticPropertyModel propRoh_participates = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/participates");
            if (propRoh_participates != null && propRoh_participates.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_participates.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        Organization roh_participates = new Organization(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_participates.Add(roh_participates);
                    }
                }
            }

            SemanticPropertyModel propRoh_conductedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/conductedBy");
            if (propRoh_conductedBy != null && propRoh_conductedBy.PropertyValues.Count > 0)
            {
                this.Roh_conductedBy = new Organization(propRoh_conductedBy.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }

            this.Vivo_relates = new List<BFO_0000023>();
            SemanticPropertyModel propVivo_relates = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#relates");
            if (propVivo_relates != null && propVivo_relates.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVivo_relates.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        BFO_0000023 vivo_relates = new BFO_0000023(propValue.RelatedEntity, idiomaUsuario);
                        this.Vivo_relates.Add(vivo_relates);
                    }
                }
            }

            this.Roh_relevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/relevantResults"));
            this.Roh_peopleYearNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/peopleYearNumber"));
            this.Roh_durationMonths = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationMonths"));
            this.Roh_geographicFocusOther = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/geographicFocusOther"));
            this.Roh_researchersNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/researchersNumber"));
            this.Roh_durationDays = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationDays"));
            this.Vivo_start= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#start"));
            this.Roh_durationYears = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationYears"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Vivo_end= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#end"));
            this.Vivo_description = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#description"));
            this.Roh_monetaryAmount = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/monetaryAmount"));
            this.Vivo_abbreviation = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#abbreviation"));
            this.Roh_classificationCVN = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/classificationCVN"));
            this.Roh_isSynchronized= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isSynchronized"));
            this.Roh_isPublic= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isPublic"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public Project(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propRoh_isSupportedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isSupportedBy");

            this.Roh_grantedBy = new List<Organization>();
            SemanticPropertyModel propRoh_grantedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/grantedBy");
            if (propRoh_grantedBy != null && propRoh_grantedBy.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_grantedBy.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        Organization roh_grantedBy = new Organization(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_grantedBy.Add(roh_grantedBy);
                    }
                }
            }


            this.Roh_publicAuthorList = new List<Person>();
            SemanticPropertyModel propRoh_publicAuthorList = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/publicAuthorList");
            if (propRoh_publicAuthorList != null && propRoh_publicAuthorList.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_publicAuthorList.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        Person roh_publicAuthorList = new Person(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_publicAuthorList.Add(roh_publicAuthorList);
                    }
                }
            }
            this.Roh_participates = new List<Organization>();
            SemanticPropertyModel propRoh_participates = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/participates");
            if (propRoh_participates != null && propRoh_participates.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_participates.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        Organization roh_participates = new Organization(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_participates.Add(roh_participates);
                    }
                }
            }

            SemanticPropertyModel propRoh_conductedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/conductedBy");
            if (propRoh_conductedBy != null && propRoh_conductedBy.PropertyValues.Count > 0)
            {
                this.Roh_conductedBy = new Organization(propRoh_conductedBy.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }

            this.Vivo_relates = new List<BFO_0000023>();
            SemanticPropertyModel propVivo_relates = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#relates");
            if (propVivo_relates != null && propVivo_relates.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVivo_relates.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        BFO_0000023 vivo_relates = new BFO_0000023(propValue.RelatedEntity, idiomaUsuario);
                        this.Vivo_relates.Add(vivo_relates);
                    }
                }
            }

            this.Roh_relevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/relevantResults"));
            this.Roh_peopleYearNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/peopleYearNumber"));
            this.Roh_durationMonths = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationMonths"));
            this.Roh_geographicFocusOther = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/geographicFocusOther"));
            this.Roh_researchersNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/researchersNumber"));
            this.Roh_durationDays = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationDays"));
            this.Vivo_start= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#start"));
            this.Roh_durationYears = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationYears"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Vivo_end= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#end"));
            this.Vivo_description = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#description"));
            this.Roh_monetaryAmount = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/monetaryAmount"));
            this.Vivo_abbreviation = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#abbreviation"));
            SemanticPropertyModel propRoh_scientificExperienceProject = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/scientificExperienceProject");
            this.Roh_classificationCVN = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/classificationCVN"));
            this.Roh_isSynchronized= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isSynchronized"));
            this.Roh_isPublic= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isPublic"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }


        [LABEL(LanguageEnum.es, "http://w3id.org/roh/grantedBy")]
        [RDFProperty("http://w3id.org/roh/grantedBy")]
        public List<Organization> Roh_grantedBy { get; set; }
        public List<string> IdsRoh_grantedBy { get; set; }


        [LABEL(LanguageEnum.es, "http://w3id.org/roh/publicAuthorList")]
        [RDFProperty("http://w3id.org/roh/publicAuthorList")]
        public List<Person> Roh_publicAuthorList { get; set; }
        public List<string> IdsRoh_publicAuthorList { get; set; }

        [LABEL(LanguageEnum.es, "http://w3id.org/roh/participates")]
        [RDFProperty("http://w3id.org/roh/participates")]
        public List<Organization> Roh_participates { get; set; }
        public List<string> IdsRoh_participates { get; set; }


        [LABEL(LanguageEnum.es, "http://w3id.org/roh/conductedBy")]
        [RDFProperty("http://w3id.org/roh/conductedBy")]
        public Organization Roh_conductedBy { get; set; }
        public string IdRoh_conductedBy { get; set; }

        [LABEL(LanguageEnum.es, "http://vivoweb.org/ontology/core#relates")]
        [RDFProperty("http://vivoweb.org/ontology/core#relates")]
        public List<BFO_0000023> Vivo_relates { get; set; }

        [LABEL(LanguageEnum.es, "http://w3id.org/roh/relevantResults")]
        [RDFProperty("http://w3id.org/roh/relevantResults")]
        public string Roh_relevantResults { get; set; }

        [LABEL(LanguageEnum.es, "http://w3id.org/roh/peopleYearNumber")]
        [RDFProperty("http://w3id.org/roh/peopleYearNumber")]
        public int? Roh_peopleYearNumber { get; set; }

        [LABEL(LanguageEnum.es, "http://w3id.org/roh/durationMonths")]
        [RDFProperty("http://w3id.org/roh/durationMonths")]
        public string Roh_durationMonths { get; set; }

        [LABEL(LanguageEnum.es, "http://w3id.org/roh/geographicFocusOther")]
        [RDFProperty("http://w3id.org/roh/geographicFocusOther")]
        public string Roh_geographicFocusOther { get; set; }

        [LABEL(LanguageEnum.es, "http://w3id.org/roh/researchersNumber")]
        [RDFProperty("http://w3id.org/roh/researchersNumber")]
        public int? Roh_researchersNumber { get; set; }

        [LABEL(LanguageEnum.es, "http://w3id.org/roh/durationDays")]
        [RDFProperty("http://w3id.org/roh/durationDays")]
        public string Roh_durationDays { get; set; }

        [LABEL(LanguageEnum.es, "http://vivoweb.org/ontology/core#start")]
        [RDFProperty("http://vivoweb.org/ontology/core#start")]
        public DateTime? Vivo_start { get; set; }

        [LABEL(LanguageEnum.es, "http://w3id.org/roh/durationYears")]
        [RDFProperty("http://w3id.org/roh/durationYears")]
        public string Roh_durationYears { get; set; }

        [LABEL(LanguageEnum.es, "http://w3id.org/roh/crisIdentifier")]
        [RDFProperty("http://w3id.org/roh/crisIdentifier")]
        public string Roh_crisIdentifier { get; set; }

        [LABEL(LanguageEnum.es, "http://vivoweb.org/ontology/core#end")]
        [RDFProperty("http://vivoweb.org/ontology/core#end")]
        public DateTime? Vivo_end { get; set; }

        [LABEL(LanguageEnum.es, "http://vivoweb.org/ontology/core#description")]
        [RDFProperty("http://vivoweb.org/ontology/core#description")]
        public string Vivo_description { get; set; }

        [LABEL(LanguageEnum.es, "http://w3id.org/roh/monetaryAmount")]
        [RDFProperty("http://w3id.org/roh/monetaryAmount")]
        public float? Roh_monetaryAmount { get; set; }

        [LABEL(LanguageEnum.es, "http://vivoweb.org/ontology/core#abbreviation")]
        [RDFProperty("http://vivoweb.org/ontology/core#abbreviation")]
        public string Vivo_abbreviation { get; set; }

        [LABEL(LanguageEnum.es, "ClasificaciÃ³n CVN")]
        [RDFProperty("http://w3id.org/roh/classificationCVN")]
        public string Roh_classificationCVN { get; set; }

        [LABEL(LanguageEnum.es, "http://w3id.org/roh/isSynchronized")]
        [RDFProperty("http://w3id.org/roh/isSynchronized")]
        public bool Roh_isSynchronized { get; set; }

        [LABEL(LanguageEnum.es, "http://w3id.org/roh/isPublic")]
        [RDFProperty("http://w3id.org/roh/isPublic")]
        public bool Roh_isPublic { get; set; }

        [LABEL(LanguageEnum.es, "http://w3id.org/roh/title")]
        [RDFProperty("http://w3id.org/roh/title")]
        public string Roh_title { get; set; }
    }

    public class Feature : GnossOCBase
    {

        public Feature() : base() { }

        public Feature(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propGn_parentFeature = pSemCmsModel.GetPropertyByPath("http://www.geonames.org/ontology#parentFeature");
            if (propGn_parentFeature != null && propGn_parentFeature.PropertyValues.Count > 0)
            {
                this.Gn_parentFeature = new Feature(propGn_parentFeature.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
            this.Gn_name = new Dictionary<LanguageEnum, string>();
            this.Gn_name.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://www.geonames.org/ontology#name")));

            this.Gn_featureCode = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://www.geonames.org/ontology#featureCode"));
        }

        public virtual string RdfType { get { return "http://www.geonames.org/ontology#Feature"; } }
        public virtual string RdfsLabel { get { return "http://www.geonames.org/ontology#Feature"; } }
        [LABEL(LanguageEnum.es, "Rasgo padre")]
        [RDFProperty("http://www.geonames.org/ontology#parentFeature")]
        public Feature Gn_parentFeature { get; set; }
        public string IdGn_parentFeature { get; set; }

        [LABEL(LanguageEnum.es, "Identificador")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }

        [LABEL(LanguageEnum.es, "Nombre")]
        [RDFProperty("http://www.geonames.org/ontology#name")]
        public Dictionary<LanguageEnum, string> Gn_name { get; set; }

        [LABEL(LanguageEnum.es, "CÃ³digo de rasgo")]
        [RDFProperty("http://www.geonames.org/ontology#featureCode")]
        public string Gn_featureCode { get; set; }
    }

    public class SupportType : GnossOCBase
    {

        public SupportType() : base() { }

        public SupportType(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
        }

        public virtual string RdfType
        {
            get { return "http://w3id.org/roh/SupportType"; }
        }
        public virtual string RdfsLabel
        {
            get { return "http://w3id.org/roh/SupportType"; }
        }
        [LABEL(LanguageEnum.es, "Tipo de soporte")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }

        [LABEL(LanguageEnum.es, "Identificador del tipo de soporte")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }
    }

    public class CategoryPath : GnossOCBase
    {

        public CategoryPath() : base() { } 

        public CategoryPath(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Roh_categoryNode = new List<Concept>();
            SemanticPropertyModel propRoh_categoryNode = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/categoryNode");
            if(propRoh_categoryNode != null && propRoh_categoryNode.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_categoryNode.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        Concept roh_categoryNode = new Concept(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_categoryNode.Add(roh_categoryNode);
                    }
                }
            }
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/CategoryPath"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/CategoryPath"; } }

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/categoryNode")]
        [RDFProperty("http://w3id.org/roh/categoryNode")]
        public  List<Concept> Roh_categoryNode { get; set;}
        public List<string> IdsRoh_categoryNode { get; set;}
    }

    public class Concept : GnossOCBase
    {

        public Concept() : base() { }

        public Concept(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Skos_broader = new List<Concept>();
            SemanticPropertyModel propSkos_broader = pSemCmsModel.GetPropertyByPath("http://www.w3.org/2008/05/skos#broader");
            if (propSkos_broader != null && propSkos_broader.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propSkos_broader.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        Concept skos_broader = new Concept(propValue.RelatedEntity, idiomaUsuario);
                        this.Skos_broader.Add(skos_broader);
                    }
                }
            }
            this.Skos_narrower = new List<Concept>();
            SemanticPropertyModel propSkos_narrower = pSemCmsModel.GetPropertyByPath("http://www.w3.org/2008/05/skos#narrower");
            if (propSkos_narrower != null && propSkos_narrower.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propSkos_narrower.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        Concept skos_narrower = new Concept(propValue.RelatedEntity, idiomaUsuario);
                        this.Skos_narrower.Add(skos_narrower);
                    }
                }
            }
            this.Skos_symbol = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://www.w3.org/2008/05/skos#symbol"));
            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
            this.Skos_prefLabel = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://www.w3.org/2008/05/skos#prefLabel"));
            this.Dc_source = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/source"));
        }

        public virtual string RdfType
        {
            get { return "http://www.w3.org/2008/05/skos#Concept"; }
        }
        public virtual string RdfsLabel
        {
            get { return "http://www.w3.org/2008/05/skos#Concept"; }
        }

        [LABEL(LanguageEnum.es, "GenÃ©rico")]
        [RDFProperty("http://www.w3.org/2008/05/skos#broader")]
        public List<Concept> Skos_broader { get; set; }

        [LABEL(LanguageEnum.es, "EspecÃ­fico")]
        [RDFProperty("http://www.w3.org/2008/05/skos#narrower")]
        public List<Concept> Skos_narrower { get; set; }

        [LABEL(LanguageEnum.es, "SÃ­mbolo")]
        [RDFProperty("http://www.w3.org/2008/05/skos#symbol")]
        public string Skos_symbol { get; set; }

        [LABEL(LanguageEnum.es, "Identificador")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }

        [LABEL(LanguageEnum.es, "Etiqueta preferente")]
        [RDFProperty("http://www.w3.org/2008/05/skos#prefLabel")]
        public string Skos_prefLabel { get; set; }

        [LABEL(LanguageEnum.es, "Fuente")]
        [RDFProperty("http://purl.org/dc/elements/1.1/source")]
        public string Dc_source { get; set; }
    }
	
	public class CV : GnossOCBase
    {

        public CV() : base() { }

        public CV(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/CV"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/CV"; } }

    }

    public class Person : GnossOCBase
    {

        public Person() : base() { } 
        

        public Person(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propRoh_hasRole = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasRole");
            if(propRoh_hasRole != null && propRoh_hasRole.PropertyValues.Count > 0)
            {
                this.Roh_hasRole = new Organization(propRoh_hasRole.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            SemanticPropertyModel propVivo_departmentOrSchool = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#departmentOrSchool");
            if(propVivo_departmentOrSchool != null && propVivo_departmentOrSchool.PropertyValues.Count > 0)
            {
                this.Vivo_departmentOrSchool = new Department(propVivo_departmentOrSchool.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            this.Vivo_hasResearchArea = new List<CategoryPath>();
            SemanticPropertyModel propVivo_hasResearchArea = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#hasResearchArea");
            if(propVivo_hasResearchArea != null && propVivo_hasResearchArea.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVivo_hasResearchArea.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        CategoryPath vivo_hasResearchArea = new CategoryPath(propValue.RelatedEntity,idiomaUsuario);
                        this.Vivo_hasResearchArea.Add(vivo_hasResearchArea);
                    }
                }
            }
            this.Vivo_relates = new List<Group>();
            SemanticPropertyModel propVivo_relates = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#relates");
            if(propVivo_relates != null && propVivo_relates.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVivo_relates.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        Group vivo_relates = new Group(propValue.RelatedEntity,idiomaUsuario);
                        this.Vivo_relates.Add(vivo_relates);
                    }
                }
            }
            SemanticPropertyModel propRoh_lineResearch = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/lineResearch");
            this.Roh_lineResearch = new List<string>();
            if (propRoh_lineResearch != null && propRoh_lineResearch.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_lineResearch.PropertyValues)
                {
                    this.Roh_lineResearch.Add(propValue.Value);
                }
            }
            this.Roh_publicationsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/publicationsNumber"));
            this.Vivo_researcherId = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#researcherId"));
            this.Vivo_scopusId = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#scopusId"));
            this.Roh_projectsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/projectsNumber"));
            this.Vcard_address = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#address"));
            this.Roh_hasPosition = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasPosition"));
            SemanticPropertyModel propFoaf_homepage = pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/homepage");
            this.Foaf_homepage = new List<string>();
            if (propFoaf_homepage != null && propFoaf_homepage.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propFoaf_homepage.PropertyValues)
                {
                    this.Foaf_homepage.Add(propValue.Value);
                }
            }
            SemanticPropertyModel propVcard_email = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#email");
            this.Vcard_email = new List<string>();
            if (propVcard_email != null && propVcard_email.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVcard_email.PropertyValues)
                {
                    this.Vcard_email.Add(propValue.Value);
                }
            }
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Vivo_description = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#description"));
            this.Roh_semanticScholarId = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/semanticScholarId"));
            this.Roh_ORCID = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/ORCID"));
            this.Roh_h_index = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/h-index"));
            SemanticPropertyModel propVcard_hasTelephone = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasTelephone");
            this.Vcard_hasTelephone = new List<string>();
            if (propVcard_hasTelephone != null && propVcard_hasTelephone.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVcard_hasTelephone.PropertyValues)
                {
                    this.Vcard_hasTelephone.Add(propValue.Value);
                }
            }
            this.Roh_collaboratorsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/collaboratorsNumber"));
            SemanticPropertyModel propFoaf_nick = pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/nick");
            this.Foaf_nick = new List<string>();
            if (propFoaf_nick != null && propFoaf_nick.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propFoaf_nick.PropertyValues)
                {
                    this.Foaf_nick.Add(propValue.Value);
                }
            }
            this.Roh_isSynchronized= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isSynchronized"));
            this.Foaf_firstName = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/firstName"));
            this.Roh_isActive= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isActive"));
            this.Foaf_name = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/name"));
            this.Roh_hasResearchAreaEdited= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasResearchAreaEdited"));
            this.Foaf_lastName = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/lastName"));
            this.Roh_isPublic= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isPublic"));
			SemanticPropertyModel propRoh_cvOf = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/cvOf");
            if (propRoh_cvOf != null && propRoh_cvOf.PropertyValues.Count > 0)
            {
                this.Roh_cvOf = new CV(propRoh_cvOf.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_gnossUser = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/gnossUser"));
        }

        public virtual string RdfType { get { return "http://xmlns.com/foaf/0.1/Person"; } }
        public virtual string RdfsLabel { get { return "http://xmlns.com/foaf/0.1/Person"; } }
        [LABEL(LanguageEnum.es,"http://w3id.org/roh/hasRole")]
        [RDFProperty("http://w3id.org/roh/hasRole")]
        public  Organization Roh_hasRole  { get; set;} 
        public string IdRoh_hasRole  { get; set;} 

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#departmentOrSchool")]
        [RDFProperty("http://vivoweb.org/ontology/core#departmentOrSchool")]
        public  Department Vivo_departmentOrSchool  { get; set;} 
        public string IdVivo_departmentOrSchool  { get; set;} 

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#hasResearchArea")]
        [RDFProperty("http://vivoweb.org/ontology/core#hasResearchArea")]
        public  List<CategoryPath> Vivo_hasResearchArea { get; set;}

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#relates")]
        [RDFProperty("http://vivoweb.org/ontology/core#relates")]
        public  List<Group> Vivo_relates { get; set;}
        public List<string> IdsVivo_relates { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/lineResearch")]
        [RDFProperty("http://w3id.org/roh/lineResearch")]
        public  List<string> Roh_lineResearch { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/publicationsNumber")]
        [RDFProperty("http://w3id.org/roh/publicationsNumber")]
        public  int? Roh_publicationsNumber { get; set;}

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#researcherId")]
        [RDFProperty("http://vivoweb.org/ontology/core#researcherId")]
        public  string Vivo_researcherId { get; set;}

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#scopusId")]
        [RDFProperty("http://vivoweb.org/ontology/core#scopusId")]
        public  string Vivo_scopusId { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/projectsNumber")]
        [RDFProperty("http://w3id.org/roh/projectsNumber")]
        public  int? Roh_projectsNumber { get; set;}

        [LABEL(LanguageEnum.es,"https://www.w3.org/2006/vcard/ns#address")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#address")]
        public  string Vcard_address { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/hasPosition")]
        [RDFProperty("http://w3id.org/roh/hasPosition")]
        public  string Roh_hasPosition { get; set;}

        [LABEL(LanguageEnum.es,"http://xmlns.com/foaf/0.1/homepage")]
        [RDFProperty("http://xmlns.com/foaf/0.1/homepage")]
        public  List<string> Foaf_homepage { get; set;}

        [LABEL(LanguageEnum.es,"https://www.w3.org/2006/vcard/ns#email")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#email")]
        public  List<string> Vcard_email { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/crisIdentifier")]
        [RDFProperty("http://w3id.org/roh/crisIdentifier")]
        public  string Roh_crisIdentifier { get; set;}

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#description")]
        [RDFProperty("http://vivoweb.org/ontology/core#description")]
        public  string Vivo_description { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/semanticScholarId")]
        [RDFProperty("http://w3id.org/roh/semanticScholarId")]
        public  string Roh_semanticScholarId { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/ORCID")]
        [RDFProperty("http://w3id.org/roh/ORCID")]
        public  string Roh_ORCID { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/h-index")]
        [RDFProperty("http://w3id.org/roh/h-index")]
        public  float? Roh_h_index { get; set;}

        [LABEL(LanguageEnum.es,"https://www.w3.org/2006/vcard/ns#hasTelephone")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#hasTelephone")]
        public  List<string> Vcard_hasTelephone { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/collaboratorsNumber")]
        [RDFProperty("http://w3id.org/roh/collaboratorsNumber")]
        public  int? Roh_collaboratorsNumber { get; set;}

        [LABEL(LanguageEnum.es,"http://xmlns.com/foaf/0.1/nick")]
        [RDFProperty("http://xmlns.com/foaf/0.1/nick")]
        public  List<string> Foaf_nick { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/isSynchronized")]
        [RDFProperty("http://w3id.org/roh/isSynchronized")]
        public  bool Roh_isSynchronized { get; set;}

        [LABEL(LanguageEnum.es,"http://xmlns.com/foaf/0.1/firstName")]
        [RDFProperty("http://xmlns.com/foaf/0.1/firstName")]
        public  string Foaf_firstName { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/isActive")]
        [RDFProperty("http://w3id.org/roh/isActive")]
        public  bool Roh_isActive { get; set;}

        [LABEL(LanguageEnum.es,"http://xmlns.com/foaf/0.1/name")]
        [RDFProperty("http://xmlns.com/foaf/0.1/name")]
        public  string Foaf_name { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/hasResearchAreaEdited")]
        [RDFProperty("http://w3id.org/roh/hasResearchAreaEdited")]
        public  bool Roh_hasResearchAreaEdited { get; set;}

        [LABEL(LanguageEnum.es,"http://xmlns.com/foaf/0.1/lastName")]
        [RDFProperty("http://xmlns.com/foaf/0.1/lastName")]
        public  string Foaf_lastName { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/isPublic")]
        [RDFProperty("http://w3id.org/roh/isPublic")]
        public  bool Roh_isPublic { get; set;}
		
		[LABEL(LanguageEnum.es, "http://w3id.org/roh/cvOf")]
        [RDFProperty("http://w3id.org/roh/cvOf")]
        public CV Roh_cvOf { get; set; }

        [LABEL(LanguageEnum.es, "http://w3id.org/roh/gnossUser")]
        [RDFProperty("http://w3id.org/roh/gnossUser")]
        public string Roh_gnossUser { get; set; }

    }

    public class Department : GnossOCBase
    {

        public Department() : base() { }

        public Department(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title"));
            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
        }

        public virtual string RdfType { get { return "http://vivoweb.org/ontology/core#Department"; } }
        public virtual string RdfsLabel { get { return "http://vivoweb.org/ontology/core#Department"; } }
        [LABEL(LanguageEnum.es, "http://purl.org/dc/elements/1.1/title")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public string Dc_title { get; set; }

        [LABEL(LanguageEnum.es, "http://purl.org/dc/elements/1.1/identifier")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }
    }

    public class Organization : GnossOCBase
    {

        public Organization() : base() { } 

        public Organization(SemanticResourceModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.RootEntities[0].Entity.Uri;
            SemanticPropertyModel propVcard_hasRegion = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasRegion");
            if(propVcard_hasRegion != null && propVcard_hasRegion.PropertyValues.Count > 0)
            {
                this.Vcard_hasRegion = new Feature(propVcard_hasRegion.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            SemanticPropertyModel propVcard_hasCountryName = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasCountryName");
            if(propVcard_hasCountryName != null && propVcard_hasCountryName.PropertyValues.Count > 0)
            {
                this.Vcard_hasCountryName = new Feature(propVcard_hasCountryName.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            SemanticPropertyModel propDc_type = pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/type");
            if(propDc_type != null && propDc_type.PropertyValues.Count > 0)
            {
                this.Dc_type = new OrganizationType(propDc_type.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Roh_otherTypeMoreInfo = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/otherTypeMoreInfo"));
            this.Vcard_locality = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#locality"));
            this.Roh_isSynchronized= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isSynchronized"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public Organization(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propVcard_hasRegion = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasRegion");
            if(propVcard_hasRegion != null && propVcard_hasRegion.PropertyValues.Count > 0)
            {
                this.Vcard_hasRegion = new Feature(propVcard_hasRegion.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            SemanticPropertyModel propVcard_hasCountryName = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasCountryName");
            if(propVcard_hasCountryName != null && propVcard_hasCountryName.PropertyValues.Count > 0)
            {
                this.Vcard_hasCountryName = new Feature(propVcard_hasCountryName.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            SemanticPropertyModel propDc_type = pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/type");
            if(propDc_type != null && propDc_type.PropertyValues.Count > 0)
            {
                this.Dc_type = new OrganizationType(propDc_type.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Roh_otherTypeMoreInfo = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/otherTypeMoreInfo"));
            this.Vcard_locality = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#locality"));
            this.Roh_isSynchronized= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isSynchronized"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public virtual string RdfType { get { return "http://xmlns.com/foaf/0.1/Organization"; } }
        public virtual string RdfsLabel { get { return "http://xmlns.com/foaf/0.1/Organization"; } }
        [LABEL(LanguageEnum.es,"https://www.w3.org/2006/vcard/ns#hasRegion")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#hasRegion")]
        public  Feature Vcard_hasRegion  { get; set;} 
        public string IdVcard_hasRegion  { get; set;} 

        [LABEL(LanguageEnum.es,"https://www.w3.org/2006/vcard/ns#hasCountryName")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#hasCountryName")]
        public  Feature Vcard_hasCountryName  { get; set;} 
        public string IdVcard_hasCountryName  { get; set;} 

        [LABEL(LanguageEnum.es,"http://purl.org/dc/elements/1.1/type")]
        [RDFProperty("http://purl.org/dc/elements/1.1/type")]
        public  OrganizationType Dc_type  { get; set;} 
        public string IdDc_type  { get; set;} 

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/crisIdentifier")]
        [RDFProperty("http://w3id.org/roh/crisIdentifier")]
        public  string Roh_crisIdentifier { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/otherTypeMoreInfo")]
        [RDFProperty("http://w3id.org/roh/otherTypeMoreInfo")]
        public  string Roh_otherTypeMoreInfo { get; set;}

        [LABEL(LanguageEnum.es,"https://www.w3.org/2006/vcard/ns#locality")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#locality")]
        public  string Vcard_locality { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/isSynchronized")]
        [RDFProperty("http://w3id.org/roh/isSynchronized")]
        public  bool Roh_isSynchronized { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/title")]
        [RDFProperty("http://w3id.org/roh/title")]
        public  string Roh_title { get; set;}
    }

    public class OrganizationType : GnossOCBase
    {

        public OrganizationType() : base() { }

        public OrganizationType(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

        }

        public virtual string RdfType { get { return "http://w3id.org/roh/OrganizationType"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/OrganizationType"; } }
        [LABEL(LanguageEnum.es, "Identificador del tipo de entidad")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }

        [LABEL(LanguageEnum.es, "Tipo de entidad")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }

    }

    public class BFO_0000023 : GnossOCBase
    {

        public BFO_0000023() : base() { } 

        public BFO_0000023(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Foaf_nick = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/nick"));
            this.Rdf_comment = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://www.w3.org/1999/02/22-rdf-syntax-ns#comment")).Value;
            SemanticPropertyModel propRdf_member = pSemCmsModel.GetPropertyByPath("http://www.w3.org/1999/02/22-rdf-syntax-ns#member");
            if(propRdf_member != null && propRdf_member.PropertyValues.Count > 0)
            {
                this.Rdf_member = new Person(propRdf_member.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
        }

        public virtual string RdfType { get { return "http://purl.obolibrary.org/obo/BFO_0000023"; } }
        public virtual string RdfsLabel { get { return "http://purl.obolibrary.org/obo/BFO_0000023"; } }

        [LABEL(LanguageEnum.es,"http://xmlns.com/foaf/0.1/nick")]
        [RDFProperty("http://xmlns.com/foaf/0.1/nick")]
        public  string Foaf_nick { get; set;}

        [LABEL(LanguageEnum.es,"http://www.w3.org/1999/02/22-rdf-syntax-ns#comment")]
        [RDFProperty("http://www.w3.org/1999/02/22-rdf-syntax-ns#comment")]
        public  int Rdf_comment { get; set;}

        [LABEL(LanguageEnum.es,"http://www.w3.org/1999/02/22-rdf-syntax-ns#member")]
        [RDFProperty("http://www.w3.org/1999/02/22-rdf-syntax-ns#member")]
        public  Person Rdf_member  { get; set;} 
        public string IdRdf_member  { get; set;} 
    }

    public class DataAuthor : GnossOCBase
    {

        public DataAuthor() : base() { }

        public DataAuthor(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propRoh_motivatedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/motivatedBy");
            if (propRoh_motivatedBy != null && propRoh_motivatedBy.PropertyValues.Count > 0)
            {
                //this.Roh_motivatedBy = new Motivation(propRoh_motivatedBy.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            SemanticPropertyModel propRoh_contributionGrade = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/contributionGrade");
            if (propRoh_contributionGrade != null && propRoh_contributionGrade.PropertyValues.Count > 0)
            {
                //this.Roh_contributionGrade = new ContributionGradeDocument(propRoh_contributionGrade.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_relevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/relevantResults"));
            this.Roh_correspondingAuthor = GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/correspondingAuthor"));
            this.Roh_relevantPublication = GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/relevantPublication"));
            this.Roh_motivatedByOther = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/motivatedByOther"));
            SemanticPropertyModel propRdf_member = pSemCmsModel.GetPropertyByPath("http://www.w3.org/1999/02/22-rdf-syntax-ns#member");
            if (propRdf_member != null && propRdf_member.PropertyValues.Count > 0)
            {
                this.Rdf_member = new Person(propRdf_member.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
        }

        public virtual string RdfType
        {
            get { return "http://w3id.org/roh/DataAuthor"; }
        }
        public virtual string RdfsLabel
        {
            get { return "http://w3id.org/roh/DataAuthor"; }
        }

        //[LABEL(LanguageEnum.es, "Forma de inscripciï¿½n")]
        //[RDFProperty("http://w3id.org/roh/motivatedBy")]
        //public Motivation Roh_motivatedBy { get; set; }
        //public string IdRoh_motivatedBy { get; set; }

        //[LABEL(LanguageEnum.es, "Grado de contribuciï¿½n")]
        //[RDFProperty("http://w3id.org/roh/contributionGrade")]
        //public ContributionGradeDocument Roh_contributionGrade { get; set; }
        //public string IdRoh_contributionGrade { get; set; }

        [LABEL(LanguageEnum.es, "Resultados relevantes")]
        [RDFProperty("http://w3id.org/roh/relevantResults")]
        public string Roh_relevantResults { get; set; }

        [LABEL(LanguageEnum.es, "Autor de correspondencia")]
        [RDFProperty("http://w3id.org/roh/correspondingAuthor")]
        public bool Roh_correspondingAuthor { get; set; }

        [LABEL(LanguageEnum.es, "Publicaciï¿½n relevante")]
        [RDFProperty("http://w3id.org/roh/relevantPublication")]
        public bool Roh_relevantPublication { get; set; }

        [LABEL(LanguageEnum.es, "Forma de inscripciï¿½n, otros")]
        [RDFProperty("http://w3id.org/roh/motivatedByOther")]
        public string Roh_motivatedByOther { get; set; }

        [LABEL(LanguageEnum.es, "Autor")]
        [RDFProperty("http://www.w3.org/1999/02/22-rdf-syntax-ns#member")]
        public Person Rdf_member { get; set; }
        public string IdRdf_member { get; set; }
    }

    public class ImpactIndexCategory : GnossOCBase
    {

        public ImpactIndexCategory() : base() { }

        public ImpactIndexCategory(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_title = new Dictionary<LanguageEnum, string>
            ();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
        }

        public virtual string RdfType
        {
            get { return "http://w3id.org/roh/ImpactIndexCategory"; }
        }
        public virtual string RdfsLabel
        {
            get { return "http://w3id.org/roh/ImpactIndexCategory"; }
        }
        [LABEL(LanguageEnum.es, "CategorÃ­a del Ã­ndice de impacto")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string>
        Dc_title
        { get; set; }

        [LABEL(LanguageEnum.es, "Identificador de la categorï¿½a del ï¿½ndice de impacto")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }
    }

    public class ReferenceSource : GnossOCBase
    {

        public ReferenceSource() : base() { }

        public ReferenceSource(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_title = new Dictionary<LanguageEnum, string>
            ();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
        }

        public virtual string RdfType
        {
            get { return "http://purl.org/ontology/bibo/ReferenceSource"; }
        }
        public virtual string RdfsLabel
        {
            get { return "http://purl.org/ontology/bibo/ReferenceSource"; }
        }
        [LABEL(LanguageEnum.es, "Fuente de referencia")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string>
        Dc_title
        { get; set; }

        [LABEL(LanguageEnum.es, "http://purl.org/dc/elements/1.1/identifier")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }
    }

    public class PublicationMetric : GnossOCBase
    {

        public PublicationMetric() : base() { } 

        public PublicationMetric(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Roh_metricName = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/metricName"));
            this.Roh_citationCount = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/citationCount")).Value;
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/PublicationMetric"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/PublicationMetric"; } }

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/metricName")]
        [RDFProperty("http://w3id.org/roh/metricName")]
        public  string Roh_metricName { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/citationCount")]
        [RDFProperty("http://w3id.org/roh/citationCount")]
        public  int Roh_citationCount { get; set;}
    }

    public class PublicationType : GnossOCBase
    {

        public PublicationType() : base() { }

        public PublicationType(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_title = new Dictionary<LanguageEnum, string>
            ();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
        }

        public virtual string RdfType
        {
            get { return "http://w3id.org/roh/PublicationType"; }
        }
        public virtual string RdfsLabel
        {
            get { return "http://w3id.org/roh/PublicationType"; }
        }
        [LABEL(LanguageEnum.es, "Tipo de publicaciï¿½n")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string>
        Dc_title
        { get; set; }

        [LABEL(LanguageEnum.es, "Identificador del tipo de publicaciï¿½n")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }
    }

    public class MainDocument : GnossOCBase
    {

        public MainDocument() : base() { }

        public MainDocument(SemanticResourceModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.RootEntities[0].Entity.Uri;
            this.Roh_impactIndex = new List<ImpactIndex>();
            SemanticPropertyModel propRoh_impactIndex = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/impactIndex");
            if (propRoh_impactIndex != null && propRoh_impactIndex.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_impactIndex.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        ImpactIndex roh_impactIndex = new ImpactIndex(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_impactIndex.Add(roh_impactIndex);
                    }
                }
            }
            SemanticPropertyModel propRoh_format = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/format");
            if (propRoh_format != null && propRoh_format.PropertyValues.Count > 0)
            {
                //this.Roh_format = new DocumentFormat(propRoh_format.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
            this.Bibo_isbn = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/ontology/bibo/isbn"));
            this.Bibo_editor = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/ontology/bibo/editor"));
            this.Bibo_issn = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/ontology/bibo/issn"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
        }

        public MainDocument(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Roh_impactIndex = new List<ImpactIndex>();
            SemanticPropertyModel propRoh_impactIndex = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/impactIndex");
            if (propRoh_impactIndex != null && propRoh_impactIndex.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_impactIndex.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        ImpactIndex roh_impactIndex = new ImpactIndex(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_impactIndex.Add(roh_impactIndex);
                    }
                }
            }
            SemanticPropertyModel propRoh_format = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/format");
            if (propRoh_format != null && propRoh_format.PropertyValues.Count > 0)
            {
                //this.Roh_format = new DocumentFormat(propRoh_format.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
            this.Bibo_isbn = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/ontology/bibo/isbn"));
            this.Bibo_editor = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/ontology/bibo/editor"));
            this.Bibo_issn = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/ontology/bibo/issn"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
        }

        public virtual string RdfType
        {
            get { return "http://w3id.org/roh/MainDocument"; }
        }
        public virtual string RdfsLabel
        {
            get { return "http://w3id.org/roh/MainDocument"; }
        }
        [RDFProperty("http://w3id.org/roh/impactIndex")]
        public List<ImpactIndex> Roh_impactIndex { get; set; }

        //[LABEL(LanguageEnum.es, "http://w3id.org/roh/DocumentFormat")]
        //[RDFProperty("http://w3id.org/roh/format")]
        //public DocumentFormat Roh_format { get; set; }
        //public string IdRoh_format { get; set; }

        [LABEL(LanguageEnum.es, "TÃ­tulo de la publicaciÃ³n principal")]
        [RDFProperty("http://w3id.org/roh/title")]
        public string Roh_title { get; set; }

        [LABEL(LanguageEnum.es, "ISBN")]
        [RDFProperty("http://purl.org/ontology/bibo/isbn")]
        public string Bibo_isbn { get; set; }

        [LABEL(LanguageEnum.es, "Editorial")]
        [RDFProperty("http://purl.org/ontology/bibo/editor")]
        public string Bibo_editor { get; set; }

        [LABEL(LanguageEnum.es, "ISSN")]
        [RDFProperty("http://purl.org/ontology/bibo/issn")]
        public string Bibo_issn { get; set; }

        [LABEL(LanguageEnum.es, "Identificador de la publicaciÃ³n principal")]
        [RDFProperty("http://w3id.org/roh/crisIdentifier")]
        public string Roh_crisIdentifier { get; set; }
    }
    public class ImpactIndex : GnossOCBase
    {

        public ImpactIndex() : base() { }

        public ImpactIndex(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propRoh_impactCategory = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/impactCategory");
            if (propRoh_impactCategory != null && propRoh_impactCategory.PropertyValues.Count > 0)
            {
                this.Roh_impactCategory = new ImpactIndexCategory(propRoh_impactCategory.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_impactIndexInYear = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/impactIndexInYear"));
            this.Roh_impactSourceOther = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/impactSourceOther"));
            this.Roh_year = GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/year"));
            this.Roh_journalNumberInCat = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/journalNumberInCat"));
            this.Roh_publicationPosition = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/publicationPosition"));
            this.Roh_journalTop25 = GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/journalTop25"));
            SemanticPropertyModel propRoh_impactSource = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/impactSource");
            if (propRoh_impactSource != null && propRoh_impactSource.PropertyValues.Count > 0)
            {
                this.Roh_impactSource = new ReferenceSource(propRoh_impactSource.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
        }

        public virtual string RdfType
        {
            get { return "http://w3id.org/roh/ImpactIndex"; }
        }
        public virtual string RdfsLabel
        {
            get { return "http://w3id.org/roh/ImpactIndex"; }
        }

        [LABEL(LanguageEnum.es, "CategorÃ­a del Ã­ndice de impacto")]
        [RDFProperty("http://w3id.org/roh/impactCategory")]
        public ImpactIndexCategory Roh_impactCategory { get; set; }
        public string IdRoh_impactCategory { get; set; }

        [LABEL(LanguageEnum.es, "Ãndice de impacto en aÃ±o de publicaciÃ³n")]
        [RDFProperty("http://w3id.org/roh/impactIndexInYear")]
        public float? Roh_impactIndexInYear { get; set; }

        [LABEL(LanguageEnum.es, "Fuente de impacto, otros")]
        [RDFProperty("http://w3id.org/roh/impactSourceOther")]
        public string Roh_impactSourceOther { get; set; }

        [LABEL(LanguageEnum.es, "AÃ±o del Ã­ndice de impacto")]
        [RDFProperty("http://w3id.org/roh/year")]
        public DateTime? Roh_year { get; set; }

        [LABEL(LanguageEnum.es, "NÃºmero de revistas en la categorÃ­a")]
        [RDFProperty("http://w3id.org/roh/journalNumberInCat")]
        public int? Roh_journalNumberInCat { get; set; }

        [LABEL(LanguageEnum.es, "PosiciÃ³n de publicaciÃ³n")]
        [RDFProperty("http://w3id.org/roh/publicationPosition")]
        public int? Roh_publicationPosition { get; set; }

        [LABEL(LanguageEnum.es, "Revista dentro del 25%")]
        [RDFProperty("http://w3id.org/roh/journalTop25")]
        public bool Roh_journalTop25 { get; set; }

        [LABEL(LanguageEnum.es, "Fuente de impacto")]
        [RDFProperty("http://w3id.org/roh/impactSource")]
        public ReferenceSource Roh_impactSource { get; set; }
        public string IdRoh_impactSource { get; set; }
    }
}
